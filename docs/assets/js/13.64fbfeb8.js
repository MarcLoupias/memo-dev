(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{367:function(r,e,t){"use strict";t.r(e);var n=t(45),a=Object(n.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"markdown-infos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#markdown-infos"}},[r._v("#")]),r._v(" Markdown infos")]),r._v(" "),t("h2",{attrs:{id:"auteurs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auteurs"}},[r._v("#")]),r._v(" Auteurs")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Aaron_Swartz",target:"_blank",rel:"noopener noreferrer"}},[r._v("Aaron Swartz"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/John_Gruber",target:"_blank",rel:"noopener noreferrer"}},[r._v("John Gruber"),t("OutboundLink")],1)]),r._v(" "),t("h2",{attrs:{id:"syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[r._v("#")]),r._v(" Syntax")]),r._v(" "),t("p",[t("a",{attrs:{href:"http://daringfireball.net/projects/markdown/syntax",target:"_blank",rel:"noopener noreferrer"}},[r._v("Markdown: Syntax : daringfireball.net"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"http://fr.wikipedia.org/wiki/Markdown",target:"_blank",rel:"noopener noreferrer"}},[r._v("Markdown : fr.wikipedia.org"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://help.github.com/categories/writing-on-github/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Markdown on GitHub"),t("OutboundLink")],1)]),r._v(" "),t("h2",{attrs:{id:"linters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linters"}},[r._v("#")]),r._v(" linters")]),r._v(" "),t("h3",{attrs:{id:"textlint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#textlint"}},[r._v("#")]),r._v(" textlint")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://textlint.github.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("textlint - "),t("code",[r._v("textlint.github.io")]),t("OutboundLink")],1),r._v(" ("),t("a",{attrs:{href:"https://github.com/textlint/textlint",target:"_blank",rel:"noopener noreferrer"}},[r._v("textlint/textlint - "),t("code",[r._v("github.com")]),t("OutboundLink")],1),r._v(")")]),r._v(" "),t("blockquote",[t("p",[r._v("The pluggable natural language linter for text and markdown.")])]),r._v(" "),t("h3",{attrs:{id:"markdownlint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#markdownlint"}},[r._v("#")]),r._v(" markdownlint")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/igorshubovych/markdownlint-cli",target:"_blank",rel:"noopener noreferrer"}},[r._v("igorshubovych/markdownlint-cli"),t("OutboundLink")],1),r._v(" with "),t("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint",target:"_blank",rel:"noopener noreferrer"}},[r._v("DavidAnson/markdownlint"),t("OutboundLink")],1),r._v(" ("),t("a",{attrs:{href:"https://dlaa.me/markdownlint/",target:"_blank",rel:"noopener noreferrer"}},[r._v("online parser demo"),t("OutboundLink")],1),r._v(")")]),r._v(" "),t("blockquote",[t("p",[r._v("A Node.js style checker and lint tool for Markdown/CommonMark files.")])]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint/issues/80",target:"_blank",rel:"noopener noreferrer"}},[r._v("No auto fix in markdownlint explanation issue"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("h3",{attrs:{id:"remarkjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remarkjs"}},[r._v("#")]),r._v(" remarkjs")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/remarkjs/remark",target:"_blank",rel:"noopener noreferrer"}},[r._v("remarkjs/remark - "),t("code",[r._v("github.com")]),t("OutboundLink")],1),r._v(" ("),t("a",{attrs:{href:"https://github.com/remarkjs/remark-lint",target:"_blank",rel:"noopener noreferrer"}},[r._v("remarkjs/remark-lint - "),t("code",[r._v("github.com")]),t("OutboundLink")],1),r._v(")")]),r._v(" "),t("blockquote",[t("p",[r._v("Markdown processor powered by plugins based on @unifiedjs (and @vfile, @syntax-tree)")])]),r._v(" "),t("h2",{attrs:{id:"style-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#style-guide"}},[r._v("#")]),r._v(" style-guide")]),r._v(" "),t("p",[t("a",{attrs:{href:"http://www.cirosantilli.com/markdown-style-guide/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Markdown Style Guide"),t("OutboundLink")],1),r._v(" ("),t("a",{attrs:{href:"https://github.com/cirosantilli/markdown-style-guide/",target:"_blank",rel:"noopener noreferrer"}},[r._v("cirosantilli/markdown-style-guide - "),t("code",[r._v("github.com")]),t("OutboundLink")],1),r._v(")")]),r._v(" "),t("blockquote",[t("p",[r._v("Readable and portable Markdown style guide.")])]),r._v(" "),t("h2",{attrs:{id:"tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[r._v("#")]),r._v(" tools")]),r._v(" "),t("h3",{attrs:{id:"parsers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parsers"}},[r._v("#")]),r._v(" parsers")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.npmtrends.com/markdown-vs-markdown-it-vs-marked-vs-weather-js",target:"_blank",rel:"noopener noreferrer"}},[r._v("Markdown parsers comparator - www.npmtrends.com"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://css-tricks.com/choosing-right-markdown-parser/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Choosing the Right Markdown Parser - css-tricks.com - 20160201"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/GitbookIO/markup-it",target:"_blank",rel:"noopener noreferrer"}},[r._v("GitbookIO/markup-it - "),t("code",[r._v("github.com")]),t("OutboundLink")],1)]),r._v(" "),t("blockquote",[t("p",[r._v("JavaScript library to parse and serialize markup content (Markdown and HTML)")])]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"}},[r._v("markdown-it/markdown-it - "),t("code",[r._v("github.com")]),t("OutboundLink")],1)]),r._v(" "),t("blockquote",[t("p",[r._v("Markdown parser, done right. 100% CommonMark support, extensions, syntax plugins & high speed")])]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/markedjs/marked/",target:"_blank",rel:"noopener noreferrer"}},[r._v("markedjs/marked - "),t("code",[r._v("github.com")]),t("OutboundLink")],1),r._v(" "),t("a",{attrs:{href:"https://marked.js.org/demo",target:"_blank",rel:"noopener noreferrer"}},[r._v("online demo"),t("OutboundLink")],1)]),r._v(" "),t("blockquote",[t("p",[r._v("A markdown parser and compiler. Built for speed.")])]),r._v(" "),t("p",[r._v("It can be used to "),t("a",{attrs:{href:"https://marked.js.org/#/USING_PRO.md",target:"_blank",rel:"noopener noreferrer"}},[r._v("build export in another format"),t("OutboundLink")],1),r._v(", "),t("a",{attrs:{href:"https://github.com/Holi0317/md2bbc.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("Holi0317/md2bbc example"),t("OutboundLink")],1),r._v(".")]),r._v(" "),t("h3",{attrs:{id:"unified-js-ecosystem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unified-js-ecosystem"}},[r._v("#")]),r._v(" unified.js ecosystem")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://unified.js.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("unified.js.org"),t("OutboundLink")],1),r._v(" "),t("a",{attrs:{href:"https://medium.com/unifiedjs",target:"_blank",rel:"noopener noreferrer"}},[r._v("unifiedjs on medium.com"),t("OutboundLink")],1),r._v(" "),t("a",{attrs:{href:"https://twitter.com/unifiedjs",target:"_blank",rel:"noopener noreferrer"}},[r._v("unifiedjs on twitter.com"),t("OutboundLink")],1)]),r._v(" "),t("blockquote",[t("p",[r._v("unified is an interface for processing text with syntax trees and transforming between them.")])]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/syntax-tree",target:"_blank",rel:"noopener noreferrer"}},[r._v("syntax-tree - "),t("code",[r._v("github.com")]),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("The idea is to convert any text documents (markdown, html, natural language, ...) into a syntax-tree to easily achieve 2 ways transformation.")]),r._v(" "),t("p",[r._v("Syntax-trees comes into 2 types :\n- Concrete Syntax Tree (CST) (contains everything to recreate the exact representation, tabs numbers, spaces, etc ...)\n- Abstract Syntax Tree (AST) (contains just what is needed to recreate exact syntactic representation)")]),r._v(" "),t("p",[r._v("They inherits from "),t("a",{attrs:{href:"https://github.com/syntax-tree/unist",target:"_blank",rel:"noopener noreferrer"}},[r._v("unist"),t("OutboundLink")],1),r._v(", a "),t("strong",[r._v("Uni")]),r._v("versal "),t("strong",[r._v("S")]),r._v("yntax "),t("strong",[r._v("T")]),r._v("ree.")]),r._v(" "),t("p",[r._v("Markdown :\n- AST : "),t("a",{attrs:{href:"https://github.com/syntax-tree/mdast",target:"_blank",rel:"noopener noreferrer"}},[r._v("mdast"),t("OutboundLink")],1),r._v("\n- Parser/Compiler : "),t("a",{attrs:{href:"https://github.com/remarkjs/remark",target:"_blank",rel:"noopener noreferrer"}},[r._v("remark"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("HTML :\n- AST : "),t("a",{attrs:{href:"https://github.com/syntax-tree/hast",target:"_blank",rel:"noopener noreferrer"}},[r._v("hast"),t("OutboundLink")],1),r._v("\n- Parser/Compiler : "),t("a",{attrs:{href:"https://github.com/rehypejs/rehype",target:"_blank",rel:"noopener noreferrer"}},[r._v("rehype"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("Natural language :\n- CST : "),t("a",{attrs:{href:"https://github.com/syntax-tree/nlcst",target:"_blank",rel:"noopener noreferrer"}},[r._v("nlcst"),t("OutboundLink")],1),r._v("\n- Parser/Compiler : "),t("a",{attrs:{href:"https://github.com/retextjs/retext",target:"_blank",rel:"noopener noreferrer"}},[r._v("retext"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("A virtual file format called "),t("a",{attrs:{href:"https://github.com/vfile/vfile",target:"_blank",rel:"noopener noreferrer"}},[r._v("vfile"),t("OutboundLink")],1),r._v(" is used to represent processed documents. It contains the file data, the path, the basename, etc ...")]),r._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("| ....................... process() ......................... |\n| ......... parse() ..... | run() | ..... stringify() ....... |\n\n          +--------+                     +----------+\nInput ->- | Parser | ->- Syntax Tree ->- | Compiler | ->- Output\n          +--------+          |          +----------+\n                              X\n                              |\n                       +--------------+\n                       | Transformers |\n                       +--------------+\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br"),t("span",{staticClass:"line-number"},[r._v("2")]),t("br"),t("span",{staticClass:"line-number"},[r._v("3")]),t("br"),t("span",{staticClass:"line-number"},[r._v("4")]),t("br"),t("span",{staticClass:"line-number"},[r._v("5")]),t("br"),t("span",{staticClass:"line-number"},[r._v("6")]),t("br"),t("span",{staticClass:"line-number"},[r._v("7")]),t("br"),t("span",{staticClass:"line-number"},[r._v("8")]),t("br"),t("span",{staticClass:"line-number"},[r._v("9")]),t("br"),t("span",{staticClass:"line-number"},[r._v("10")]),t("br"),t("span",{staticClass:"line-number"},[r._v("11")]),t("br")])]),t("h2",{attrs:{id:"javascript-lib"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-lib"}},[r._v("#")]),r._v(" JavaScript lib")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/btford/angular-markdown-directive",target:"_blank",rel:"noopener noreferrer"}},[r._v("btford/angular-markdown-directive - "),t("code",[r._v("github.com")]),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);