(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{350:function(e,t,n){"use strict";n.r(t);var o=n(33),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"angularjs-components"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#angularjs-components"}},[e._v("#")]),e._v(" AngularJS - components")]),e._v(" "),n("h2",{attrs:{id:"i-guides"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#i-guides"}},[e._v("#")]),e._v(" I - guides")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.angularjs.org/guide/component",target:"_blank",rel:"noopener noreferrer"}},[e._v("angular official component devguide"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://teropa.info/blog/2015/10/18/refactoring-angular-apps-to-components.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Refactoring Angular Apps to Component Style : teropa.info"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://toddmotto.com/angular-1-5-lifecycle-hooks",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lifecycle hooks in Angular 1.5 : toddmotto.com"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("Jun 3, 2016")]),e._v(" "),n("ul",[n("li",[e._v("$onInit\n"),n("ul",[n("li",[e._v("Using $onInit")]),e._v(" "),n("li",[e._v("$onInit + “require”")]),e._v(" "),n("li",[e._v("Real world $onInit + “require”")])])]),e._v(" "),n("li",[e._v("$postLink\n"),n("ul",[n("li",[e._v("Using $postLink")]),e._v(" "),n("li",[e._v("Real world $postLink")]),e._v(" "),n("li",[e._v("What $postLink is not")])])]),e._v(" "),n("li",[e._v("$onChanges\n"),n("ul",[n("li",[e._v("What calls $onChanges?")]),e._v(" "),n("li",[e._v("Using $onChanges")]),e._v(" "),n("li",[e._v("Cloning “change” hashes for “immutable” bindings")]),e._v(" "),n("li",[e._v("One-way dataflow + events")]),e._v(" "),n("li",[e._v("Is two-way binding through “=” syntax dead?")]),e._v(" "),n("li",[e._v("Using isFirstChange()")])])]),e._v(" "),n("li",[e._v("$onDestroy\n"),n("ul",[n("li",[e._v("Using $onDestroy")])])])])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://toddmotto.com/one-way-data-binding-in-angular-1-5/",target:"_blank",rel:"noopener noreferrer"}},[e._v("One-way data-binding in Angular 1.5 : toddmotto.com"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("With a parent / child relation ship between component where the parent pass data to the child, it is the practice of binding uni-directionnal instead of bi-directionnal.")]),e._v(" "),n("p",[e._v("bi-directionnal (two way) is "),n("code",[e._v("bindings: { obj: '=' }")]),e._v("\nuni-directionnal (one way) is "),n("code",[e._v("bindings: { obj: '<' }")])]),e._v(" "),n("p",[e._v("Using one way binding break the link with the parent scope. So the child cannot mutate the parent state.")]),e._v(" "),n("p",[n("code",[e._v("/!\\")]),e._v(" If an object reference is bound to the child from the parent, if the child mutate a property it will work like two way binding.")]),e._v(" "),n("p",[e._v("Another way to exprime difference between two-way and one-way bindings is :")]),e._v(" "),n("ul",[n("li",[e._v("One way binding is binding the data from the model to the view.")]),e._v(" "),n("li",[e._v("Two way binding is binding the data from the model to the view and the view to the model. (Also called "),n("strong",[e._v("MVVM")]),e._v(")")])])]),e._v(" "),n("h2",{attrs:{id:"ii-best-practices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ii-best-practices"}},[e._v("#")]),e._v(" II - best practices")]),e._v(" "),n("h3",{attrs:{id:"a-todd-motto-best-practices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-todd-motto-best-practices"}},[e._v("#")]),e._v(" A - Todd Motto best practices")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/toddmotto/angularjs-styleguide#components",target:"_blank",rel:"noopener noreferrer"}},[e._v("Todd Motto best practices"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[n("p",[e._v("one-way data flow")]),e._v(" "),n("ul",[n("li",[e._v("data goes from the top level component to the lower levels.")]),e._v(" "),n("li",[e._v("child components modifications on bindings doesn't reflect on parents components.")]),e._v(" "),n("li",[e._v("callback function are used to handle events, they are used to update the parents components data modified by children.")])])]),e._v(" "),n("li",[n("p",[e._v("stateful components")]),e._v(" "),n("ul",[n("li",[e._v("referred to as "),n("strong",[e._v("smart/container components")])]),e._v(" "),n("li",[n("em",[e._v("how things work")])]),e._v(" "),n("li",[e._v("fetches state (through API, so no "),n("code",[e._v("bindings")]),e._v(")")]),e._v(" "),n("li",[e._v("does not directly mutate state")]),e._v(" "),n("li",[e._v("renders child components that mutate state")]),e._v(" "),n("li",[e._v("the classic case is a view component for example an entity list")])])]),e._v(" "),n("li",[n("p",[e._v("stateless components")]),e._v(" "),n("ul",[n("li",[e._v("referred to as "),n("strong",[e._v("dumb/presentational components")])]),e._v(" "),n("li",[n("em",[e._v("how things look")])]),e._v(" "),n("li",[e._v("has defined inputs and outputs using "),n("code",[e._v("bindings: {}")])]),e._v(" "),n("li",[e._v("data enters the component through attribute bindings ("),n("strong",[e._v("inputs")]),e._v(")")]),e._v(" "),n("li",[e._v("data leaves the component through events ("),n("strong",[e._v("outputs")]),e._v(")")]),e._v(" "),n("li",[e._v("mutates state, passes data back up on-demand (such as a click or submit event)")]),e._v(" "),n("li",[e._v("doesn't care where data comes from - it's stateless")]),e._v(" "),n("li",[e._v("are highly reusable components")])])])]),e._v(" "),n("p",[e._v("So TLDR is :")]),e._v(" "),n("ul",[n("li",[e._v("the webapp is a tree of components")]),e._v(" "),n("li",[e._v("theses components are stateful or stateless")]),e._v(" "),n("li",[e._v("views are stateful")]),e._v(" "),n("li",[e._v("stateful components fetches and store data (it is the state)")]),e._v(" "),n("li",[e._v("stateful components are an aggregation of stateless components")]),e._v(" "),n("li",[e._v("stateless components renders data only, so they are reusables")])]),e._v(" "),n("p",[e._v("See section "),n("em",[e._v("component design")]),e._v(" section in "),n("em",[e._v("inter-component communication")]),e._v(" part for this design flaws.")]),e._v(" "),n("h3",{attrs:{id:"b-components-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#b-components-types"}},[e._v("#")]),e._v(" B - Components types")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://blog.wishtack.com/2017/05/05/the-guide-to-building-quality-angular-2-components/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The 3 component categories in Angular"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Presentational and Container Components : Dan Abramov (ReactJS team, Redux author)"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("View Components (or Routing components) (or Stateful components for Todd Motto)")]),e._v(" "),n("li",[e._v("Container Components (or Smart components) (or Stateful components for Todd Motto)")]),e._v(" "),n("li",[e._v("Dumb Components (or Stateless components for Todd Motto)")])]),e._v(" "),n("p",[e._v("Responsabilities table")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Responsabilities per component")]),e._v(" "),n("th",[e._v("View Comp.")]),e._v(" "),n("th",[e._v("Container Comp.")]),e._v(" "),n("th",[e._v("Dumb Comp.")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Read route parameters")]),e._v(" "),n("td",[e._v("YES")]),e._v(" "),n("td",[e._v("NO")]),e._v(" "),n("td",[e._v("NO")])]),e._v(" "),n("tr",[n("td",[e._v("Uses stores and data services")]),e._v(" "),n("td",[e._v("NO")]),e._v(" "),n("td",[e._v("YES")]),e._v(" "),n("td",[e._v("NO")])]),e._v(" "),n("tr",[n("td",[e._v("Display and styling")]),e._v(" "),n("td",[e._v("NO")]),e._v(" "),n("td",[e._v("NO")]),e._v(" "),n("td",[e._v("YES")])])])]),e._v(" "),n("h2",{attrs:{id:"iii-feedback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iii-feedback"}},[e._v("#")]),e._v(" III - feedback")]),e._v(" "),n("h3",{attrs:{id:"a-ng-1-5-from-the-trenches-at-velesin-io"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-ng-1-5-from-the-trenches-at-velesin-io"}},[e._v("#")]),e._v(" A - NG 1.5 from the trenches at velesin.io")]),e._v(" "),n("ul",[n("li",[e._v("1/7 "),n("a",{attrs:{href:"https://velesin.io/2016/04/14/starting-a-new-app-in-angular-1-5/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Starting a new app in Angular 1.5 – does it make sense?"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("2/7 "),n("a",{attrs:{href:"https://velesin.io/2016/04/26/angular-1-5-app-as-a-tree-of-components/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular 1.5 app as a tree of components"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("3/7 "),n("a",{attrs:{href:"https://velesin.io/2016/05/18/communication-between-angular-1-5-components/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Communication between Angular 1.5 components (and with the API)"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("4/7 "),n("a",{attrs:{href:"https://velesin.io/2016/05/31/angular-1-5-fractal-project-structure/",target:"_blank",rel:"noopener noreferrer"}},[e._v('A flexible Angular 1.5 project structure (the "fractal" architecture)'),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("5/7 "),n("a",{attrs:{href:"https://velesin.io/2016/07/12/angular-1-5-project-in-es6-es2015/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Writing Angular 1.5 project in ES6/ES2015"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("6/7 "),n("a",{attrs:{href:"https://velesin.io/2016/08/23/unit-testing-angular-1-5-components/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unit testing Angular 1.5 components – a detailed guide"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("7/7 E2E testing of component-oriented Angular 1.5 app [COMING SOON]")])]),e._v(" "),n("h2",{attrs:{id:"iv-inter-component-communication"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iv-inter-component-communication"}},[e._v("#")]),e._v(" IV - inter-component communication")]),e._v(" "),n("h3",{attrs:{id:"a-angular-2-parent-child-communication-via-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-angular-2-parent-child-communication-via-service"}},[e._v("#")]),e._v(" A - angular 2 parent & child communication via service")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://angular.io/guide/component-interaction#parent-and-children-communicate-via-a-service",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parent and children communicate via a service : angular.io"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"b-practices-overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#b-practices-overview"}},[e._v("#")]),e._v(" B - practices overview")]),e._v(" "),n("p",[e._v("src "),n("a",{attrs:{href:"http://stackoverflow.com/questions/41070446/angular-1-5-components-communication-best-practice",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular 1.5. Components communication. Best practice : stackoverflow.com"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("I'm using Angular 1.5.9.")]),e._v(" "),n("p",[e._v("Right now I have two components which need to communicate. If I change something in the first one (for example choose item in the list) => second one needs to be changed (item that was chosen needs to be displayed) and vice versa (changing in the second one => change in the first one) I have read about a lot of approaches, so I can manage this in few ways:")]),e._v(" "),n("ol",[n("li",[e._v("Communication via shareable Service")]),e._v(" "),n("li",[e._v('Using two way data binding ("=" option in component bindings). '),n("a",{attrs:{href:"https://jsfiddle.net/peter_drinnan/t4q4nrfp/27/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Using one way data binding with input/output approach. "),n("a",{attrs:{href:"http://stackoverflow.com/questions/36033940/how-to-pass-data-between-child-components-in-angular-1-5-not-using-scope",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v('Using "require" (some parent component to share data). '),n("a",{attrs:{href:"http://stackoverflow.com/questions/36645065/component-communication-in-angular-1-5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("Maybe I miss something? What is the best practice?")]),e._v(" "),n("p",[e._v("Thank you.")])]),e._v(" "),n("h3",{attrs:{id:"c-component-design"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-component-design"}},[e._v("#")]),e._v(" C - component design")]),e._v(" "),n("h4",{attrs:{id:"_1-avoid-event-bubbling-extraneous-props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-avoid-event-bubbling-extraneous-props"}},[e._v("#")]),e._v(" 1 - avoid event bubbling & extraneous props")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://blog.angular-university.io/angular-component-design-how-to-avoid-custom-event-bubbling-and-extraneous-properties-in-the-local-component-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular Component Design: How to Avoid Custom Event Bubbling And Extraneous Properties in the Local Component Tree"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("2 big flaws :")]),e._v(" "),n("ul",[n("li",[e._v("Custom Event Bubbling")]),e._v(" "),n("li",[e._v("Extraneous Properties (input are props so if tree is deeper then 2 comps, there is lots of props passing through for nothing)")])]),e._v(" "),n("h4",{attrs:{id:"_2-cross-component-communication-design-comparison"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-cross-component-communication-design-comparison"}},[e._v("#")]),e._v(" 2 - cross component communication design comparison")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://www.aurorasolutions.io/blog/angularjs-cross-component-communication/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AngularJS: Cross Component Communication"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("Communicating with inherited scopes")]),e._v(" "),n("li",[e._v("Communicating with events")]),e._v(" "),n("li",[e._v("Communicating with services")])]),e._v(" "),n("h4",{attrs:{id:"_3-event-based-design-is-cancer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-event-based-design-is-cancer"}},[e._v("#")]),e._v(" 3 - event based design is cancer")]),e._v(" "),n("p",[e._v("Events are no more then GOTO in an asynchronous context. (<- assert by me)")]),e._v(" "),n("p",[e._v("Worse then goto :")]),e._v(" "),n("ul",[n("li",[e._v("async")]),e._v(" "),n("li",[e._v("many place in source code to register an event")])]),e._v(" "),n("p",[n("a",{attrs:{href:"http://stackoverflow.com/questions/46586/goto-still-considered-harmful",target:"_blank",rel:"noopener noreferrer"}},[e._v("GOTO still considered harmful? : stackoverflow.com"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/johnpapa/angular-styleguide/issues/805",target:"_blank",rel:"noopener noreferrer"}},[e._v("Add Angular1 Event Patterns/Best Practices"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"d-articles"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#d-articles"}},[e._v("#")]),e._v(" D - articles")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://developer.telerik.com/featured/front-end-application-frameworks-component-architectures/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Front-end Application Libraries and Component Architectures"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/toddmotto/angularjs-styleguide/issues/156",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parent component trigger function in child component"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/toddmotto/angularjs-styleguide/issues/90",target:"_blank",rel:"noopener noreferrer"}},[e._v("component communication and triggers"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://kfarst.github.io/angular/2017/03/29/component-interaction-in-angular/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Component Interaction in Angular : "),n("code",[e._v("kfarst.github.io")]),n("OutboundLink")],1),e._v(" 20170329")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://dfsq.info/site/read/angular-components-communication",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular components communication : dfsq.info"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);