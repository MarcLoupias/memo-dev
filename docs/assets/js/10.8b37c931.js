(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{363:function(e,t,a){"use strict";a.r(t);var s=a(42),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"markdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown"}},[e._v("#")]),e._v(" Markdown")]),e._v(" "),a("h2",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"#gitlab-flavored-markdown-gfm"}},[e._v("GitLab Flavored Markdown")])])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#newlines"}},[e._v("Newlines")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#multiple-underscores-in-words"}},[e._v("Multiple underscores in words")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#url-auto-linking"}},[e._v("URL auto-linking")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#code-and-syntax-highlighting"}},[e._v("Code and Syntax Highlighting")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#emoji"}},[e._v("Emoji")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#special-gitlab-references"}},[e._v("Special GitLab references")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#task-lists"}},[e._v("Task lists")])])]),e._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"#standard-markdown"}},[e._v("Standard Markdown")])])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#headers"}},[e._v("Headers")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#emphasis"}},[e._v("Emphasis")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#lists"}},[e._v("Lists")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#links"}},[e._v("Links")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#images"}},[e._v("Images")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#blockquotes"}},[e._v("Blockquotes")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#inline-html"}},[e._v("Inline HTML")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#horizontal-rule"}},[e._v("Horizontal Rule")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#line-breaks"}},[e._v("Line Breaks")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#tables"}},[e._v("Tables")])])]),e._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"#references"}},[e._v("References")])])]),e._v(" "),a("h2",{attrs:{id:"gitlab-flavored-markdown-gfm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-flavored-markdown-gfm"}},[e._v("#")]),e._v(" GitLab Flavored Markdown (GFM)")]),e._v(" "),a("p",[e._v('For GitLab we developed something we call "GitLab Flavored Markdown" (GFM). It extends the standard Markdown in a few significant ways to add some useful functionality.')]),e._v(" "),a("p",[e._v("You can use GFM in")]),e._v(" "),a("ul",[a("li",[e._v("comments")]),e._v(" "),a("li",[e._v("issues")]),e._v(" "),a("li",[e._v("merge requests")]),e._v(" "),a("li",[e._v("milestones")]),e._v(" "),a("li",[e._v("wiki pages")])]),e._v(" "),a("p",[e._v("You can also use other rich text files in GitLab. You might have to install a dependency to do so. Please see the "),a("a",{attrs:{href:"https://github.com/gitlabhq/markup#markups",target:"_blank",rel:"noopener noreferrer"}},[e._v("github-markup gem readme"),a("OutboundLink")],1),e._v(" for more information.")]),e._v(" "),a("h2",{attrs:{id:"newlines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#newlines"}},[e._v("#")]),e._v(" Newlines")]),e._v(" "),a("p",[e._v("GFM honors the markdown specification in how "),a("a",{attrs:{href:"http://daringfireball.net/projects/markdown/syntax#p",target:"_blank",rel:"noopener noreferrer"}},[e._v("paragraphs and line breaks are handled"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines.\nLine-breaks, or softreturns, are rendered if you end a line with two or more spaces")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Roses are red [followed by two or more spaces]\nViolets are blue\n\nSugar is sweet\n")])])]),a("p",[e._v("Roses are red\nViolets are blue")]),e._v(" "),a("p",[e._v("Sugar is sweet")]),e._v(" "),a("h2",{attrs:{id:"multiple-underscores-in-words"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-underscores-in-words"}},[e._v("#")]),e._v(" Multiple underscores in words")]),e._v(" "),a("p",[e._v("It is not reasonable to italicize just "),a("em",[e._v("part")]),e._v(" of a word, especially when you're dealing with code and names that often appear with multiple underscores. Therefore, GFM ignores multiple underscores in words.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("perform_complicated_task\ndo_this_and_do_that_and_another_thing\n")])])]),a("p",[e._v("perform_complicated_task\ndo_this_and_do_that_and_another_thing")]),e._v(" "),a("h2",{attrs:{id:"url-auto-linking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-auto-linking"}},[e._v("#")]),e._v(" URL auto-linking")]),e._v(" "),a("p",[e._v("GFM will autolink almost any URL you copy and paste into your text.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("* http://www.google.com\n* https://google.com/\n* ftp://ftp.us.debian.org/debian/\n* smb://foo/bar/baz\n* irc://irc.freenode.net/gitlab\n* http://localhost:3000\n")])])]),a("ul",[a("li",[e._v("http://www.google.com")]),e._v(" "),a("li",[e._v("https://google.com/")]),e._v(" "),a("li",[e._v("ftp://ftp.us.debian.org/debian/")]),e._v(" "),a("li",[e._v("smb://foo/bar/baz")]),e._v(" "),a("li",[e._v("irc://irc.freenode.net/gitlab")]),e._v(" "),a("li",[e._v("http://localhost:3000")])]),e._v(" "),a("h2",{attrs:{id:"code-and-syntax-highlighting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-and-syntax-highlighting"}},[e._v("#")]),e._v(" Code and Syntax Highlighting")]),e._v(" "),a("p",[e._v("Blocks of code are either fenced by lines with three back-ticks "),a("code",[e._v("```")]),e._v(", or are indented with four spaces. Only the fenced code blocks support syntax highlighting.")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Inline `code` has `back-ticks around` it.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Inline "),a("code",[e._v("code")]),e._v(" has "),a("code",[e._v("back-ticks around")]),e._v(" it.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('```javascript\nvar s = "JavaScript syntax highlighting";\nalert(s);\n```\n\n```python\ndef function():\n    #indenting works just fine in the fenced code block\n    s = "Python syntax highlighting"\n    print s\n```\n\n```ruby\nrequire \'redcarpet\'\nmarkdown = Redcarpet.new("Hello World!")\nputs markdown.to_html\n```\n\n```\nNo language indicated, so no syntax highlighting.\ns = "There is no highlighting for this."\nBut let\'s throw in a <b>tag</b>.\n```\n')])])]),a("p",[e._v("becomes:")]),e._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"JavaScript syntax highlighting"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#indenting works just fine in the fenced code block")]),e._v("\n    s "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Python syntax highlighting"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),e._v(" s\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("require")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'redcarpet'")]),e._v("\nmarkdown "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("Redcarpet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nputs markdown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("to_html\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('No language indicated, so no syntax highlighting.\ns = "There is no highlighting for this."\nBut let\'s throw in a <b>tag</b>.\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"emoji"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emoji"}},[e._v("#")]),e._v(" Emoji")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Sometimes you want to :monkey: around a bit and add some :star2: to your :speech_balloon:. Well we have a gift for you:\n\n:zap: You can use emoji anywhere GFM is supported. :v:\n\nYou can use it to point out a :bug: or warn about :speak_no_evil: patches. And if someone improves your really :snail: code, send them some :birthday:. People will :heart: you for that.\n\nIf you are new to this, don't be :fearful:. You can easily join the emoji :family:. All you need to do is to look up on the supported codes.\n\nConsult the [Emoji Cheat Sheet](http://emoji.codes) for a list of all supported emoji codes. :thumbsup:\n")])])]),a("p",[e._v("Sometimes you want to 🐒 around a bit and add some 🌟 to your 💬. Well we have a gift for you:")]),e._v(" "),a("p",[e._v("⚡️ You can use emoji anywhere GFM is supported. ✌️")]),e._v(" "),a("p",[e._v("You can use it to point out a 🐛 or warn about 🙊 patches. And if someone improves your really 🐌 code, send them some 🎂. People will ❤️ you for that.")]),e._v(" "),a("p",[e._v("If you are new to this, don't be 😨. You can easily join the emoji 👪. All you need to do is to look up on the supported codes.")]),e._v(" "),a("p",[e._v("Consult the "),a("a",{attrs:{href:"http://emoji.codes",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emoji Cheat Sheet"),a("OutboundLink")],1),e._v(" for a list of all supported emoji codes. 👍")]),e._v(" "),a("h2",{attrs:{id:"special-gitlab-references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#special-gitlab-references"}},[e._v("#")]),e._v(" Special GitLab References")]),e._v(" "),a("p",[e._v("GFM recognizes special references.")]),e._v(" "),a("p",[e._v("You can easily reference e.g. an issue, a commit, a team member or even the whole team within a project.")]),e._v(" "),a("p",[e._v("GFM will turn that reference into a link so you can navigate between them easily.")]),e._v(" "),a("p",[e._v("GFM will recognize the following:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("input")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("references")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("@user_name")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("specific user")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("@group_name")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("specific group")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("@all")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("entire team")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("#123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("issue")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("!123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("merge request")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("$123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("snippet")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("~123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("label by ID")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("~bug")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("one-word label by name")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v('~"feature request"')])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("multi-word label by name")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("9ba12248")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("specific commit")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("9ba12248...b19a04f5")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("commit range comparison")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("[README](doc/README)")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("repository file references")])])])]),e._v(" "),a("p",[e._v("GFM also recognizes certain cross-project references:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("input")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("references")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("namespace/project#123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("issue")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("namespace/project!123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("merge request")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("namespace/project$123")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("snippet")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("namespace/project@9ba12248")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("specific commit")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("namespace/project@9ba12248...b19a04f5")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("commit range comparison")])])])]),e._v(" "),a("h2",{attrs:{id:"task-lists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-lists"}},[e._v("#")]),e._v(" Task Lists")]),e._v(" "),a("p",[e._v("You can add task lists to issues, merge requests and comments. To create a task list, add a specially-formatted Markdown list, like so:")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("- [x] Completed task\n- [ ] Incomplete task\n    - [ ] Sub-task 1\n    - [x] Sub-task 2\n    - [ ] Sub-task 3\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("ul",[a("li",[e._v("[x] Completed task")]),e._v(" "),a("li",[e._v("[ ] Incomplete task\n"),a("ul",[a("li",[e._v("[ ] Sub-task 1")]),e._v(" "),a("li",[e._v("[x] Sub-task 2")]),e._v(" "),a("li",[e._v("[ ] Sub-task 3")])])])]),e._v(" "),a("p",[e._v("Task lists can only be created in descriptions, not in titles. Task item state can be managed by editing the description's Markdown or by toggling the rendered check boxes.")]),e._v(" "),a("h1",{attrs:{id:"standard-markdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#standard-markdown"}},[e._v("#")]),e._v(" Standard Markdown")]),e._v(" "),a("h2",{attrs:{id:"headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[e._v("#")]),e._v(" Headers")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h1",{attrs:{id:"h1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h1"}},[e._v("#")]),e._v(" H1")]),e._v(" "),a("h2",{attrs:{id:"h2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h2"}},[e._v("#")]),e._v(" H2")]),e._v(" "),a("h3",{attrs:{id:"h3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h3"}},[e._v("#")]),e._v(" H3")]),e._v(" "),a("h4",{attrs:{id:"h4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h4"}},[e._v("#")]),e._v(" H4")]),e._v(" "),a("h5",{attrs:{id:"h5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h5"}},[e._v("#")]),e._v(" H5")]),e._v(" "),a("h6",{attrs:{id:"h6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h6"}},[e._v("#")]),e._v(" H6")]),e._v(" "),a("p",[e._v("Alternatively, for H1 and H2, an underline-ish style:")]),e._v(" "),a("h1",{attrs:{id:"alt-h1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alt-h1"}},[e._v("#")]),e._v(" Alt-H1")]),e._v(" "),a("h2",{attrs:{id:"alt-h2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alt-h2"}},[e._v("#")]),e._v(" Alt-H2")]),e._v(" "),a("h3",{attrs:{id:"header-ids-and-links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-ids-and-links"}},[e._v("#")]),e._v(" Header IDs and links")]),e._v(" "),a("p",[e._v("All Markdown-rendered headers automatically get IDs, except in comments.")]),e._v(" "),a("p",[e._v("On hover a link to those IDs becomes visible to make it easier to copy the link to the header to give it to someone else.")]),e._v(" "),a("p",[e._v("The IDs are generated from the content of the header according to the following rules:")]),e._v(" "),a("ol",[a("li",[e._v("All text is converted to lowercase")]),e._v(" "),a("li",[e._v("All non-word text (e.g., punctuation, HTML) is removed")]),e._v(" "),a("li",[e._v("All spaces are converted to hyphens")]),e._v(" "),a("li",[e._v("Two or more hyphens in a row are converted to one")]),e._v(" "),a("li",[e._v("If a header with the same ID has already been generated, a unique\nincrementing number is appended, starting at 1.")])]),e._v(" "),a("p",[e._v("For example:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# This header has spaces in it\n## This header has a :thumbsup: in it\n# This header has Unicode in it: 한글\n## This header has spaces in it\n### This header has spaces in it\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("Would generate the following link IDs:")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("this-header-has-spaces-in-it")])]),e._v(" "),a("li",[a("code",[e._v("this-header-has-a-in-it")])]),e._v(" "),a("li",[a("code",[e._v("this-header-has-unicode-in-it-한글")])]),e._v(" "),a("li",[a("code",[e._v("this-header-has-spaces-in-it")])]),e._v(" "),a("li",[a("code",[e._v("this-header-has-spaces-in-it-1")])])]),e._v(" "),a("p",[e._v("Note that the Emoji processing happens before the header IDs are generated, so the Emoji is converted to an image which then gets removed from the ID.")]),e._v(" "),a("h2",{attrs:{id:"emphasis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emphasis"}},[e._v("#")]),e._v(" Emphasis")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Emphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("Emphasis, aka italics, with "),a("em",[e._v("asterisks")]),e._v(" or "),a("em",[e._v("underscores")]),e._v(".")]),e._v(" "),a("p",[e._v("Strong emphasis, aka bold, with "),a("strong",[e._v("asterisks")]),e._v(" or "),a("strong",[e._v("underscores")]),e._v(".")]),e._v(" "),a("p",[e._v("Combined emphasis with "),a("strong",[e._v("asterisks and "),a("em",[e._v("underscores")])]),e._v(".")]),e._v(" "),a("p",[e._v("Strikethrough uses two tildes. "),a("s",[e._v("Scratch this.")])]),e._v(" "),a("h2",{attrs:{id:"lists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lists"}},[e._v("#")]),e._v(" Lists")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("ol",[a("li",[e._v("First ordered list item")]),e._v(" "),a("li",[e._v("Another item")])]),e._v(" "),a("ul",[a("li",[e._v("Unordered sub-list.")])]),e._v(" "),a("ol",[a("li",[e._v("Actual numbers don't matter, just that it's a number")]),e._v(" "),a("li",[e._v("Ordered sub-list")]),e._v(" "),a("li",[e._v("And another item.")])]),e._v(" "),a("ul",[a("li",[e._v("Unordered list can use asterisks")])]),e._v(" "),a("ul",[a("li",[e._v("Or minuses")])]),e._v(" "),a("ul",[a("li",[e._v("Or pluses")])]),e._v(" "),a("p",[e._v("If a list item contains multiple paragraphs,\neach subsequent paragraph should be indented with four spaces.")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1.  First ordered list item\n\n    Second paragraph of first item.\n2.  Another item\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ol",[a("li",[a("p",[e._v("First ordered list item")]),e._v(" "),a("p",[e._v("Second paragraph of first item.")])]),e._v(" "),a("li",[a("p",[e._v("Another item")])])]),e._v(" "),a("p",[e._v("If the second paragraph isn't indented with four spaces,\nthe second list item will be incorrectly labeled as "),a("code",[e._v("1")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. First ordered list item\n\n   Second paragraph of first item.\n2. Another item\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ol",[a("li",[a("p",[e._v("First ordered list item")]),e._v(" "),a("p",[e._v("Second paragraph of first item.")])]),e._v(" "),a("li",[a("p",[e._v("Another item")])])]),e._v(" "),a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[e._v("#")]),e._v(" Links")]),e._v(" "),a("p",[e._v("There are two ways to create links, inline-style and reference-style.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("[I'm an inline-style link](https://www.google.com)\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself][]\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n")])])]),a("p",[a("a",{attrs:{href:"https://www.google.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("I'm an inline-style link"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.mozilla.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("I'm a reference-style link"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"LICENSE"}},[e._v("I'm a relative reference to a repository file")])]),e._v(" "),a("p",[a("a",{attrs:{href:"http://slashdot.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("You can use numbers for reference-style link definitions"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Or leave it empty and use the "),a("a",{attrs:{href:"http://www.reddit.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("link text itself"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Some text to show that the reference links can follow later.")]),e._v(" "),a("p",[a("strong",[e._v("Note")])]),e._v(" "),a("p",[e._v("Relative links do not allow referencing project files in a wiki page or wiki page in a project file. The reason for this is that, in GitLab, wiki is always a separate git repository. For example:")]),e._v(" "),a("p",[a("code",[e._v("[I'm a reference-style link](style)")])]),e._v(" "),a("p",[e._v("will point the link to "),a("code",[e._v("wikis/style")]),e._v(" when the link is inside of a wiki markdown file.")]),e._v(" "),a("h2",{attrs:{id:"images"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#images"}},[e._v("#")]),e._v(" Images")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Here's our logo (hover to see the title text):\n\nInline-style:\n![alt text](assets/logo-white.png)\n\nReference-style:\n![alt text1][logo]\n\n[logo]: assets/logo-white.png\n")])])]),a("p",[e._v("Here's our logo:")]),e._v(" "),a("p",[e._v("Inline-style:")]),e._v(" "),a("p",[a("code",[e._v("![alt text](/assets/logo-white.png)")])]),e._v(" "),a("p",[e._v("Reference-style:")]),e._v(" "),a("p",[a("code",[e._v("![alt text][logo]")])]),e._v(" "),a("p",[a("code",[e._v("[logo]: /assets/logo-white.png")])]),e._v(" "),a("h2",{attrs:{id:"blockquotes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockquotes"}},[e._v("#")]),e._v(" Blockquotes")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("blockquote",[a("p",[e._v("Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.")])]),e._v(" "),a("p",[e._v("Quote break.")]),e._v(" "),a("blockquote",[a("p",[e._v("This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can "),a("em",[e._v("put")]),e._v(" "),a("strong",[e._v("Markdown")]),e._v(" into a blockquote.")])]),e._v(" "),a("h2",{attrs:{id:"inline-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inline-html"}},[e._v("#")]),e._v(" Inline HTML")]),e._v(" "),a("p",[e._v("You can also use raw HTML in your Markdown, and it'll mostly work pretty well.")]),e._v(" "),a("p",[e._v("See the documentation for HTML::Pipeline's "),a("a",{attrs:{href:"http://www.rubydoc.info/gems/html-pipeline/HTML/Pipeline/SanitizationFilter#WHITELIST-constant",target:"_blank",rel:"noopener noreferrer"}},[e._v("SanitizationFilter"),a("OutboundLink")],1),e._v(" class for the list of allowed HTML tags and attributes.  In addition to the default "),a("code",[e._v("SanitizationFilter")]),e._v(" whitelist, GitLab allows "),a("code",[e._v("span")]),e._v(" elements.")]),e._v(" "),a("div",{staticClass:"language-no-highlight line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("dl",[a("dt",[e._v("Definition list")]),e._v(" "),a("dd",[e._v("Is something people use sometimes.")]),e._v(" "),a("dt",[e._v("Markdown in HTML")]),e._v(" "),a("dd",[e._v("Does *not* work **very** well. Use HTML "),a("em",[e._v("tags")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"horizontal-rule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#horizontal-rule"}},[e._v("#")]),e._v(" Horizontal Rule")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Three or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[e._v("Three or more...")]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("Hyphens")]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("Asterisks")]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("Underscores")]),e._v(" "),a("h2",{attrs:{id:"line-breaks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#line-breaks"}},[e._v("#")]),e._v(" Line Breaks")]),e._v(" "),a("p",[e._v('My basic recommendation for learning how line breaks work is to experiment and discover -- hit <Enter> once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You\'ll soon learn to get what you want. "Markdown Toggle" is your friend.')]),e._v(" "),a("p",[e._v("Here are some things to try out:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Here's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n\nThis line is also a separate paragraph, and...\nThis line is on its own line, because the previous line ends with two\nspaces.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("Here's a line for us to start with.")]),e._v(" "),a("p",[e._v("This line is separated from the one above by two newlines, so it will be a "),a("em",[e._v("separate paragraph")]),e._v(".")]),e._v(" "),a("p",[e._v("This line is also begins a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the "),a("em",[e._v("same paragraph")]),e._v(".")]),e._v(" "),a("p",[e._v("This line is also a separate paragraph, and...\nThis line is on its own line, because the previous line ends with two\nspaces.")]),e._v(" "),a("h2",{attrs:{id:"tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tables"}},[e._v("#")]),e._v(" Tables")]),e._v(" "),a("p",[e._v("Tables aren't part of the core Markdown spec, but they are part of GFM and Markdown Here supports them.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| header 1 | header 2 |\n| -------- | -------- |\n| cell 1   | cell 2   |\n| cell 3   | cell 4   |\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("Code above produces next output:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("header 1")]),e._v(" "),a("th",[e._v("header 2")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("cell 1")]),e._v(" "),a("td",[e._v("cell 2")])]),e._v(" "),a("tr",[a("td",[e._v("cell 3")]),e._v(" "),a("td",[e._v("cell 4")])])])]),e._v(" "),a("p",[a("strong",[e._v("Note")])]),e._v(" "),a("p",[e._v("The row of dashes between the table header and body must have at least three dashes in each column.")]),e._v(" "),a("p",[e._v("By including colons in the header row, you can align the text within that column:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| Left Aligned | Centered | Right Aligned | Left Aligned | Centered | Right Aligned |\n| :----------- | :------: | ------------: | :----------- | :------: | ------------: |\n| Cell 1       | Cell 2   | Cell 3        | Cell 4       | Cell 5   | Cell 6        |\n| Cell 7       | Cell 8   | Cell 9        | Cell 10      | Cell 11  | Cell 12       |\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Left Aligned")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Centered")]),e._v(" "),a("th",{staticStyle:{"text-align":"right"}},[e._v("Right Aligned")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Left Aligned")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Centered")]),e._v(" "),a("th",{staticStyle:{"text-align":"right"}},[e._v("Right Aligned")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Cell 1")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Cell 2")]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Cell 3")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Cell 4")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Cell 5")]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Cell 6")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Cell 7")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Cell 8")]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Cell 9")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Cell 10")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Cell 11")]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Cell 12")])])])]),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),a("ul",[a("li",[e._v("This document leveraged heavily from the "),a("a",{attrs:{href:"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Markdown-Cheatsheet"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("li",[e._v("The "),a("a",{attrs:{href:"http://daringfireball.net/projects/markdown/syntax",target:"_blank",rel:"noopener noreferrer"}},[e._v("Markdown Syntax Guide"),a("OutboundLink")],1),e._v(" at Daring Fireball is an excellent resource for a detailed explanation of standard markdown.")]),e._v(" "),a("li",[a("a",{attrs:{href:"http://dillinger.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dillinger.io"),a("OutboundLink")],1),e._v(" is a handy tool for testing standard markdown.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);