(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{345:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),e("p",[e("a",{attrs:{href:"https://git-scm.com/book/commands",target:"_blank",rel:"noopener noreferrer"}},[t._v("glossary"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://xpn-engine.blogspot.com/2012/01/comprendre-git.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Comprendre Git - ancien blog de Xavier Pigeon - 2012"),e("OutboundLink")],1)]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.saintsjd.com/2011/01/what-is-a-bare-git-repository/",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is a bare Git repository : www.saintsjd.com"),e("OutboundLink")],1)]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),e("p",[e("a",{attrs:{href:"https://groups.google.com/forum/#!topic/git-users/PVDjjQ5bE10",target:"_blank",rel:"noopener noreferrer"}},[t._v("difference between working copy and working directory - groups.google.com - "),e("code",[t._v("git-users")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Literally it is the directory where the user is working üòâ")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),e("p",[t._v("A remote is a distant repository (a repo on another computer).")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=Hd_UpJPDlik&index=88&list=PLTbQvx84FrAS5clN9i8_LFUQxcMY7qXAO",target:"_blank",rel:"noopener noreferrer"}},[t._v("Comment faire un commit sans faire du Git (Alexandre Garnier) : Devoxx2016"),e("OutboundLink")],1)]),t._v(" "),t._m(17),t._v(" "),e("p",[t._v('A "branch" is an active line of development.\nThe most recent commit on a branch is referred to as the tip of that branch. The tip of the branch is referenced by a branch head, which moves forward as additional development is done on the branch.')]),t._v(" "),t._m(18),t._v(" "),e("p",[t._v("A ref pointing to a tag or commit object. In contrast to a head, a tag is not changed by a commit.")]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),e("p",[t._v("If the destination branch have not diverged from the root of the source branch, the merge is a fast-forward.")]),t._v(" "),t._m(21),e("p",[t._v("At the end, the two branches will points on the same commit.")]),t._v(" "),t._m(22),e("p",[t._v("If the destination branch have diverged from the root of the source branch,")]),t._v(" "),t._m(23),e("p",[t._v("Git will create a merge commit containing all the modifications.")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),e("p",[t._v("At this point, instead of merging, we can rewrite our branch history, the goal is to set the B1 parents to M2 instead of M1 :")]),t._v(" "),t._m(28),e("p",[t._v("Now we can run a fast-forward merge to keep a clean linear history :")]),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),e("p",[t._v("Difference depends on the command context. Log work with commits where diff work with commit content.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://stackoverflow.com/questions/462974/what-are-the-differences-between-double-dot-and-triple-dot-in-git-com",target:"_blank",rel:"noopener noreferrer"}},[t._v("What are the differences between double-dot ‚Äú..‚Äù and triple-dot ‚Äú‚Ä¶‚Äù in Git commit ranges? : stackoverflow.com"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://stackoverflow.com/questions/7251477/what-are-the-differences-between-double-dot-and-triple-dot-in-git-dif",target:"_blank",rel:"noopener noreferrer"}},[t._v("What are the differences between double-dot ‚Äú..‚Äù and triple-dot ‚Äú‚Ä¶‚Äù in Git diff commit ranges? : stackoverflow.com"),e("OutboundLink")],1)]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._m(40),t._m(41),t._v(" "),t._m(42),t._m(43),t._m(44),t._v(" "),t._m(45),t._v(" "),e("p",[e("a",{attrs:{href:"https://stackoverflow.com/questions/2221658/whats-the-difference-between-head-and-head-in-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("What's the difference between HEAD^ and HEAD~ in Git? : stackoverflow.com"),e("OutboundLink")],1)]),t._v(" "),t._m(46),t._v(" "),e("p",[t._v("Ancestors are related to the current branch.")]),t._v(" "),e("p",[t._v("A commit can have more then one parent, caret is used to select the parent.")]),t._v(" "),e("p",[t._v("Let's say we have this tree :")]),t._v(" "),t._m(47),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._m(52),t._m(53),t._m(54),t._m(55),t._v(" "),t._m(56),t._m(57),t._m(58)])}),[function(){var t=this._self._c;return t("h1",{attrs:{id:"git-definitions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-definitions"}},[this._v("#")]),this._v(" Git - definitions")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"what-is-git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-git"}},[this._v("#")]),this._v(" what is Git")])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("a distributed version control system")]),this._v(" "),t("li",[this._v("a directory content management system")]),this._v(" "),t("li",[this._v("a tree history storage system")]),this._v(" "),t("li",[this._v("a stupid content tracker")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"concepts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[this._v("#")]),this._v(" concepts")])},function(){var t=this,e=t._self._c;return e("blockquote",[e("p",[e("em",[t._v("Article int√©ressant avec une approche travaill√©e sur l'impl√©mentation interne :")])]),t._v(" "),e("p",[t._v("Git est un :")]),t._v(" "),e("ul",[e("li",[t._v("gestionnaire de contenu,")]),t._v(" "),e("li",[t._v("stock√© sous la forme d'un graphe acyclique d'objets,")]),t._v(" "),e("li",[t._v("accessible par des r√©f√©rences.")])]),t._v(" "),e("p",[t._v("Git est structur√© en 2 partie :")]),t._v(" "),e("ul",[e("li",[t._v("le "),e("strong",[t._v("frontend")]),t._v(", qui regroupe les commandes dites porcelain (add, commit, checkout, etc).")]),t._v(" "),e("li",[t._v("le "),e("strong",[t._v("backend")]),t._v(", d√©velopp√© par Linus Torvalds, qui r√©unit les commandes dites plumbing (hash-object, cat-file).")])]),t._v(" "),e("p",[t._v("On retrouve cette distinction dans la litt√©rature informatique et dans les formations : souvent, les formations pour d√©butants pr√©sentent le frontend, et le backend ne sera trait√© que par les formations avanc√©es. Les dissocier de cette mani√®re est une erreur, car en ma√Ætrisant le backend, on ma√Ætrisera bien mieux le frondend.")]),t._v(" "),e("p",[t._v("Concept #1 : Git est un gestionnaire de contenu.\nConcept #2 : La relation entre commits est un graphe acyclique (ou DAG).\nConcept #3 : Le contenu est accessible sous forme de r√©f√©rences.")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#repository"}},[this._v("#")]),this._v(" repository")])},function(){var t=this,e=t._self._c;return e("p",[t._v("Named also a "),e("em",[t._v("tree")]),t._v(" by some Git users.\nIt is the whole history of a project (a directory).\nComposed by commits. Each node is a commit.\nCreated by "),e("code",[t._v("git init")]),t._v(" command (or by "),e("code",[t._v("git clone")]),t._v(" if you want to copy an existing repository).\nCreate a self-sufficient "),e("code",[t._v(".git")]),t._v(" directory. It means that a simple zip on the repository root directory is enough to backup it.")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"bare-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bare-repository"}},[this._v("#")]),this._v(" bare repository")])},function(){var t=this,e=t._self._c;return e("p",[t._v("A repository created with "),e("code",[t._v("git init")]),t._v(" command is for "),e("strong",[t._v("working")]),t._v(".\nA repository created with "),e("code",[t._v("git init --bare")]),t._v(" command is for "),e("strong",[t._v("sharing")]),t._v(".\nA bare repository doesn't contain a working directory nor a "),e("code",[t._v(".git")]),t._v(" directory.\nGitHub, GitLab, etc ..., create a bare repository on their side.")])},function(){var t=this._self._c;return t("p",[this._v("Notice that you can add to your remote list a "),t("code",[this._v("non-bare")]),this._v(" repository but you will not be able to push in it if the branch where\nyou want to push is checked out in it, Git will deny the push (cause possible inconsistency).")])},function(){var t=this._self._c;return t("p",[this._v("It can be bypassed by setting the "),t("code",[this._v("receive.denyCurrentBranch")]),this._v(" config variable in the receiver repo to "),t("code",[this._v("'ignore'")]),this._v(" or "),t("code",[this._v("'warn'")]),this._v(" but it is not recommended.")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"working-directory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#working-directory"}},[this._v("#")]),this._v(" working directory")])},function(){var t=this._self._c;return t("p",[this._v("A "),t("code",[this._v("git status")]),this._v(" on a working directory without any changes tracked by Git output this :")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nYour branch is up-to-date with "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin/master'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nnothing to commit, working directory clean\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"remote"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remote"}},[this._v("#")]),this._v(" remote")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[this._v("#")]),this._v(" commit")])},function(){var t=this._self._c;return t("p",[this._v("Also named "),t("em",[this._v("revision")]),this._v(".\nIt is a state of a directory.\nEach commit has one ore more parents commit.\nGit stores only the difference between current commit state and parents. So a commit = current project state - parents.")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[this._v("#")]),this._v(" branch")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[this._v("#")]),this._v(" tag")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[this._v("#")]),this._v(" merge")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("git merge")]),this._v(" is the action of merging a source branch in a destination branch.")])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1\n    \\\n     B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - M2\n    \\\n     B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - M2 - - - M3\n    \\            /\n     B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[this._v("#")]),this._v(" rebase")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("git rebase")]),this._v(" allows user to rewrite the history.")])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - M2\n    \\\n     B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - M2\n         \\\n         B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- M1 - M2 - B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[this._v("#")]),this._v(" fetch")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("git fetch")]),this._v(" is the action to update a given remote repository data locally. (you have a local occurrence of all the remote you have added to your remote list).")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[this._v("#")]),this._v(" pull")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("git pull <remote-name> <branch-name>")]),this._v(" runs a "),t("code",[this._v("git fetch")]),this._v(" on the given remote then a "),t("code",[this._v("git merge")]),this._v(" on the local branch from the remote branch.")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[this._v("#")]),this._v(" push")])},function(){var t=this._self._c;return t("p",[this._v("Obviously, write access is mandatory on the remote\n"),t("code",[this._v("git push <remote-name> <branch-name>")]),this._v(" write the local branch commits on the remote branch.\nThe history must be clean enough to allow a fast forward or Git will reject the push.")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"range-operators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#range-operators"}},[this._v("#")]),this._v(" range operators")])},function(){var t=this._self._c;return t("p",[this._v("Used mostly with "),t("code",[this._v("git log")]),this._v(" and "),t("code",[this._v("git diff")]),this._v(" commands. Provide a tool to compare branches and tags.")])},function(){var t=this._self._c;return t("h4",{attrs:{id:"dot-dot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dot-dot"}},[this._v("#")]),this._v(" "),t("code",[this._v("..")]),this._v(" (dot dot)")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output all of the commits that B has that A doesn't have")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exactly the same as")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" A B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output all the difference between A and B, if A got diff that B doesn't have and B has diff that A doesn't have, it will output BOTH.")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])])},function(){var t=this._self._c;return t("h4",{attrs:{id:"dot-dot-dot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dot-dot-dot"}},[this._v("#")]),this._v(" "),t("code",[this._v("...")]),this._v(" (dot dot dot)")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# filter out all of the commits that both A and B share, thus only showing the commits that they don't both share")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output only the commits in B that A doesn't have (compare from the root of the 2 branches)")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"ancestry-references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ancestry-references"}},[this._v("#")]),this._v(" ancestry references")])},function(){var t=this._self._c;return t("p",[this._v("Used in a lot of commands stuck with "),t("code",[this._v("HEAD")]),this._v(" ref to points to ancestors commits.")])},function(){var t=this._self._c;return t("ul",[t("li",[t("code",[this._v("~")]),this._v(" specifies ancestors")]),this._v(" "),t("li",[t("code",[this._v("^")]),this._v(" specifies parents")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- A1 - A2 - - - A3\n    \\            /\n     B1 - B2 - B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var t=this._self._c;return t("p",[this._v("where "),t("code",[this._v("HEAD")]),this._v(" is "),t("code",[this._v("A3")]),this._v(".")])},function(){var t=this._self._c;return t("h4",{attrs:{id:"caret"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#caret"}},[this._v("#")]),this._v(" "),t("code",[this._v("^")]),this._v(" (caret)")])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^ is a shortand for HEAD^1\nHEAD^=A2\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^^ = HEAD^1^1 = A1\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^2 = B3\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^2^1 = B2\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^2^2 = nothing as B3 has only one parent (B2)\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("h4",{attrs:{id:"tilde"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tilde"}},[this._v("#")]),this._v(" "),t("code",[this._v("~")]),this._v(" (tilde)")])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD~ is a shortand for HEAD~1\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD~2 = A1\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HEAD^2~2 = B1\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])}],!1,null,null,null);e.default=r.exports}}]);