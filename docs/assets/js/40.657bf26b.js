(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{208:function(e,t,s){"use strict";s.r(t);var a=s(0),l=Object(a.a)({},(function(){this._self._c;return this._m(0)}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"css-selectors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-selectors"}},[e._v("#")]),e._v(" css selectors")]),e._v(" "),t("h2",{attrs:{id:"type-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-selector"}},[e._v("#")]),e._v(" Type selector")]),e._v(" "),t("p",[t("code",[e._v("A")]),e._v(": Selects all elements of type A. Type refers to the type of tag, so "),t("code",[e._v("div")]),e._v(", "),t("code",[e._v("p")]),e._v(" and "),t("code",[e._v("ul")]),e._v(" are all different element types.")]),e._v(" "),t("h2",{attrs:{id:"id-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#id-selector"}},[e._v("#")]),e._v(" ID selector")]),e._v(" "),t("p",[t("code",[e._v("#id")]),e._v(": Selects the element with a specific id. You can also combine the ID selector with the type selector.")]),e._v(" "),t("h2",{attrs:{id:"class-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-selector"}},[e._v("#")]),e._v(" Class selector")]),e._v(" "),t("p",[t("code",[e._v(".classname")]),e._v(": The class selector selects all elements with that class attribute. Elements can only have one ID, but many classes.")]),e._v(" "),t("p",[t("code",[e._v("A.className")]),e._v(": You can combine the class selector with other selectors, like the type selector.")]),e._v(" "),t("h2",{attrs:{id:"universal-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#universal-selector"}},[e._v("#")]),e._v(" Universal selector")]),e._v(" "),t("p",[t("code",[e._v("*")]),e._v(": It allows selecting all elements in a page.\n"),t("code",[e._v("A *")]),e._v(": This selects all elements inside of A.")]),e._v(" "),t("h2",{attrs:{id:"combinators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#combinators"}},[e._v("#")]),e._v(" Combinators")]),e._v(" "),t("h3",{attrs:{id:"descendant-combinator-space"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#descendant-combinator-space"}},[e._v("#")]),e._v(" Descendant Combinator (space)")]),e._v(" "),t("p",[t("code",[e._v("A B")]),e._v(": Selects all B inside of A. B is called a descendant because it is inside of another element.")]),e._v(" "),t("h3",{attrs:{id:"comma-combinator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#comma-combinator"}},[e._v("#")]),e._v(" Comma Combinator")]),e._v(" "),t("p",[t("code",[e._v("A, B")]),e._v(": Selects all A and B elements. You can combine any selectors this way, and you can specify more than two.")]),e._v(" "),t("h3",{attrs:{id:"adjacent-sibling-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adjacent-sibling-selector"}},[e._v("#")]),e._v(" Adjacent Sibling Selector")]),e._v(" "),t("p",[t("code",[e._v("A + B")]),e._v(": This selects all B elements that directly follow A. Elements that follow one another are called siblings. They're on the same level, or depth.")]),e._v(" "),t("h3",{attrs:{id:"general-sibling-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#general-sibling-selector"}},[e._v("#")]),e._v(" General Sibling Selector")]),e._v(" "),t("p",[t("code",[e._v("A ~ B")]),e._v(": You can select all siblings of an element that follow it. This is like the Adjacent Selector (A + B) except it gets all of the following elements instead of one.")]),e._v(" "),t("h3",{attrs:{id:"child-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#child-selector"}},[e._v("#")]),e._v(" Child Selector")]),e._v(" "),t("p",[t("code",[e._v("A > B")]),e._v(": You can select elements that are direct children of other elements. A child element is any element that is nested directly in another element.")]),e._v(" "),t("h2",{attrs:{id:"pseudo-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pseudo-classes"}},[e._v("#")]),e._v(" Pseudo-classes")]),e._v(" "),t("h3",{attrs:{id:"first-child-pseudo-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first-child-pseudo-selector"}},[e._v("#")]),e._v(" First Child Pseudo-selector")]),e._v(" "),t("p",[t("code",[e._v(":first-child")]),e._v(": You can select the first child element. A child element is any element that is directly nested in another element. You can combine this pseudo-selector with other selectors.")]),e._v(" "),t("h3",{attrs:{id:"only-child-pseudo-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#only-child-pseudo-selector"}},[e._v("#")]),e._v(" Only Child Pseudo-selector")]),e._v(" "),t("p",[t("code",[e._v(":only-child")]),e._v(": You can select any element that is the only element inside of another one.")]),e._v(" "),t("h3",{attrs:{id:"last-child-pseudo-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last-child-pseudo-selector"}},[e._v("#")]),e._v(" Last Child Pseudo-selector")]),e._v(" "),t("p",[t("code",[e._v(":last-child")]),e._v(": You can use this selector to select an element that is the last child element inside of another element.")]),e._v(" "),t("h3",{attrs:{id:"nth-child-pseudo-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nth-child-pseudo-selector"}},[e._v("#")]),e._v(" Nth Child Pseudo-selector")]),e._v(" "),t("p",[t("code",[e._v("A:nth-child(n)")]),e._v(": Selects the n-th (Ex: 1st, 3rd, 12th etc.) child element in A element.")]),e._v(" "),t("h3",{attrs:{id:"nth-last-child-pseudo-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nth-last-child-pseudo-selector"}},[e._v("#")]),e._v(" Nth Last Child Pseudo-selector")]),e._v(" "),t("p",[t("code",[e._v("A:nth-last-child(n)")]),e._v(": Selects the n-th (Ex: 1st, 3rd, 12th etc.) child element in A element starting from the bottom.")]),e._v(" "),t("h3",{attrs:{id:"first-of-type-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first-of-type-selector"}},[e._v("#")]),e._v(" First of Type Selector")]),e._v(" "),t("p",[t("code",[e._v(":first-of-type")]),e._v(": Selects the first element of that type within another element.")]),e._v(" "),t("h3",{attrs:{id:"nth-of-type-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nth-of-type-selector"}},[e._v("#")]),e._v(" Nth of Type Selector")]),e._v(" "),t("p",[t("code",[e._v(":nth-of-type(A)")]),e._v(": Selects a specific element based on its type and order in another element - or even or odd instances of that element.")]),e._v(" "),t("p",[t("code",[e._v("div:nth-of-type(2)")]),e._v(": selects the second instance of a "),t("code",[e._v("div")]),e._v(".")]),e._v(" "),t("p",[t("code",[e._v(".example:nth-of-type(odd)")]),e._v(": selects all odd instances of a the example class.")]),e._v(" "),t("p",[t("code",[e._v("span:nth-of-type(6n+2)")]),e._v(": selects every 6th instance of a "),t("code",[e._v("span")]),e._v(", starting from (and including) the second instance.")]),e._v(" "),t("h3",{attrs:{id:"only-of-type-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#only-of-type-selector"}},[e._v("#")]),e._v(" Only of Type Selector")]),e._v(" "),t("p",[t("code",[e._v(":only-of-type")]),e._v(": Selects the only element of its type within another element.")]),e._v(" "),t("h3",{attrs:{id:"last-of-type-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last-of-type-selector"}},[e._v("#")]),e._v(" Last of Type Selector")]),e._v(" "),t("p",[t("code",[e._v(":last-of-type")]),e._v(": Selects each last element of that type within another element. Remember type refers the kind of tag, so p and span are different types.")]),e._v(" "),t("p",[t("code",[e._v("div:last-of-type")]),e._v(": selects the last "),t("code",[e._v("div")]),e._v(" in every element.")]),e._v(" "),t("h3",{attrs:{id:"empty-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#empty-selector"}},[e._v("#")]),e._v(" Empty Selector")]),e._v(" "),t("p",[t("code",[e._v(":empty")]),e._v(": Selects elements that don't have any other elements inside of them.")]),e._v(" "),t("h3",{attrs:{id:"negation-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#negation-selector"}},[e._v("#")]),e._v(" Negation Selector")]),e._v(" "),t("p",[t("code",[e._v(":not(X)")]),e._v(': Select all elements that do not match selector "X".')]),e._v(" "),t("h2",{attrs:{id:"attribute-selectors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-selectors"}},[e._v("#")]),e._v(" Attribute selectors")]),e._v(" "),t("h3",{attrs:{id:"attribute-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-selector"}},[e._v("#")]),e._v(" Attribute Selector")]),e._v(" "),t("p",[t("code",[e._v("[attribute]")]),e._v(": Select all elements that have a specific attribute")]),e._v(" "),t("h3",{attrs:{id:"attribute-value-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-value-selector"}},[e._v("#")]),e._v(" Attribute Value Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute="value"]')]),e._v(": Select all elements that have a specific attribute value")]),e._v(" "),t("h3",{attrs:{id:"attribute-starts-with-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-starts-with-selector"}},[e._v("#")]),e._v(" Attribute Starts With Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute^="value"]')]),e._v(": Select all elements with an attribute value that starts with specific characters")]),e._v(" "),t("h3",{attrs:{id:"attribute-ends-with-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-ends-with-selector"}},[e._v("#")]),e._v(" Attribute Ends With Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute$="value"]')]),e._v(": Select all elements with an attribute value that ends with specific characters")]),e._v(" "),t("h3",{attrs:{id:"attribute-wildcard-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-wildcard-selector"}},[e._v("#")]),e._v(" Attribute Wildcard Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute*="value"]')]),e._v(": Select all elements with an attribute value that contains specific characters anywhere")]),e._v(" "),t("h3",{attrs:{id:"attribute-selector-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-selector-2"}},[e._v("#")]),e._v(" Attribute "),t("code",[e._v("~")]),e._v(" Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute~="value"]')]),e._v(': Select all elements with an attribute value that it is a whitespace-separated list of words and one of which is exactly "value".')]),e._v(" "),t("h3",{attrs:{id:"attribute-selector-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attribute-selector-3"}},[e._v("#")]),e._v(" Attribute "),t("code",[e._v("|")]),e._v(" Selector")]),e._v(" "),t("p",[t("code",[e._v('[attribute|="value"]')]),e._v(': Select all elements with an attribute value that can be exactly "value" or can begin with "value" immediately followed by '),t("code",[e._v("-")]),e._v(" ("),t("code",[e._v("U+002D")]),e._v("). It can be used for language subcode matches")]),e._v(" "),t("h2",{attrs:{id:"pseudo-elements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pseudo-elements"}},[e._v("#")]),e._v(" Pseudo elements")]),e._v(" "),t("p",[e._v("Pseudo-elements are very much like pseudo-classes, but they have differences. They are keywords (this time preceded by two colons ("),t("code",[e._v("::")]),e._v(")) that can be added to the end of selectors to select a certain part of an element. They are:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("::after")])]),e._v(" "),t("li",[t("code",[e._v("::before")])]),e._v(" "),t("li",[t("code",[e._v("::first-letter")])]),e._v(" "),t("li",[t("code",[e._v("::first-line")])]),e._v(" "),t("li",[t("code",[e._v("::selection")])]),e._v(" "),t("li",[t("code",[e._v("::backdrop")])])])])}],!1,null,null,null);t.default=l.exports}}]);