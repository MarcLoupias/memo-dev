(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{309:function(e,t,r){"use strict";r.r(t);var n=r(0),i=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/G%C3%A9nie_logiciel",target:"_blank",rel:"noopener noreferrer"}},[e._v("Définition wikipédia"),t("OutboundLink")],1)])]),e._v(" "),e._m(1),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://effectivesoftwaredesign.com/2012/02/05/separation-of-concerns/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Separation of Concerns"),t("OutboundLink")],1)])]),e._v(" "),e._m(2),e._v(" "),t("p",[e._v("Low "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Coupling_%28computer_programming%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("coupling"),t("OutboundLink")],1),e._v(", high "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cohesion_%28computer_science%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("cohesion"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"http://en.wikipedia.org/wiki/Maintainability",target:"_blank",rel:"noopener noreferrer"}},[e._v("maintainability"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"http://en.wikipedia.org/wiki/Extensibility",target:"_blank",rel:"noopener noreferrer"}},[e._v("extensibility"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"http://en.wikipedia.org/wiki/Reusability",target:"_blank",rel:"noopener noreferrer"}},[e._v("reusability"),t("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Loi_de_Brooks",target:"_blank",rel:"noopener noreferrer"}},[e._v("Loi de Brooks"),t("OutboundLink")],1)])]),e._v(" "),e._m(7),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Le_Mythe_du_mois-homme",target:"_blank",rel:"noopener noreferrer"}},[e._v("Le mythe du mois-homme"),t("OutboundLink")],1)])]),e._v(" "),e._m(8),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Principe_de_Pareto",target:"_blank",rel:"noopener noreferrer"}},[e._v("Principe de Pareto"),t("OutboundLink")],1)])]),e._v(" "),e._m(9),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"http://christian.hohmann.free.fr/index.php/lean-en-conception-et-developpement/les-basiques-du-lean-en-conception-et-developpement/286-panique-en-developpement-effet-tunnel",target:"_blank",rel:"noopener noreferrer"}},[e._v("Effet Tunnel"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Conway's_law",target:"_blank",rel:"noopener noreferrer"}},[e._v("Loi de Conway"),t("OutboundLink")],1)])])]),e._v(" "),e._m(10),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://cavares.com/2016/12/26/le-facteur-%CF%80/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Facteur PI"),t("OutboundLink")],1)])]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Loi_de_D%C3%A9m%C3%A9ter",target:"_blank",rel:"noopener noreferrer"}},[e._v("Loi de Demeter"),t("OutboundLink")],1)])]),e._v(" "),e._m(22),e._v(" "),t("p",[e._v("La notion fondamentale est qu'un objet devrait faire aussi peu d'hypothèses que possible à propos de la structure de quoi que ce soit d'autre, y compris ses propres sous-composants.")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://misko.hevery.com/2008/07/18/breaking-the-law-of-demeter-is-like-looking-for-a-needle-in-the-haystack/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Exemple concret"),t("OutboundLink")],1),e._v(" par Misko Hevery")]),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it",target:"_blank",rel:"noopener noreferrer"}},[e._v("You aren't gonna need it : en.wikipedia.org"),t("OutboundLink")],1)]),e._v(" "),e._m(25),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Inversion_of_control",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inversion of Control"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dependency_injection",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dependency Injection"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dependency_inversion_principle",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dependency Inversion Principle"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Service_locator_pattern",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Locator Pattern"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=ZasXwtTRkio",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dead-Simple Dependency Injection - Scala - Rúnar Óli Bjarnason - 2012"),t("OutboundLink")],1)])]),e._v(" "),e._m(26),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/ISO/CEI_29110",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO/CEI 29110 : ingénierie de systèmes et l'Ingénierie du logiciel - les processus de cycle de vie pour les très petits organismes"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/ISO/CEI_15504",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO/CEI 15504 : cadre pour l'évaluation des processus"),t("OutboundLink")],1)])]),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),t("p",[e._v("Plusieurs solutions de gestion des repos/projets :")]),e._v(" "),e._m(29),e._v(" "),t("p",[e._v("défaut des 2 premiers : Dependency Hell.")]),e._v(" "),t("p",[e._v("avantages du monorepo :")]),e._v(" "),e._m(30),e._v(" "),t("p",[e._v("inconvénients du monorep :")]),e._v(" "),e._m(31),e._v(" "),t("p",[e._v("impact Git :")]),e._v(" "),t("ul",[t("li",[e._v("généralement on fait du feature branching (rend difficile la collaboration)")]),e._v(" "),t("li",[e._v("monorepo impose le "),t("a",{attrs:{href:"https://trunkbaseddevelopment.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("trunk based development"),t("OutboundLink")],1),e._v(" (commit quotidiens sur le trunk + feature toggle)")])]),e._v(" "),t("p",[e._v("Le monorepo est la pratique actuelle des géants comme Google et Facebook.")]),e._v(" "),t("p",[e._v("Exemple Google (janvier 2015) :")]),e._v(" "),e._m(32),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=7Dfes-qJQ54",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pourquoi votre entreprise devrait stocker l'ensemble de son code dans un seul repo (Thierry Abaléa) Devoxx2017"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=W71BTkUbdqE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why Google Stores Billions of Lines of Code in a Single Repository : Rachel Potvin@Google 20150914"),t("OutboundLink")],1)]),e._v(" "),e._m(33),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Continuous_integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("wikipedia"),t("OutboundLink")],1)]),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Continuous_delivery",target:"_blank",rel:"noopener noreferrer"}},[e._v("wikipedia"),t("OutboundLink")],1)]),e._v(" "),e._m(36),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=aoMfbgF2D_4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Continuous Delivery - Martin Fowler - XConf - 20150131"),t("OutboundLink")],1)]),e._v(" "),e._m(37),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=skLJuksCRTw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Continuous Delivery - Jez Humble - 2012"),t("OutboundLink")],1)]),e._v(" "),t("blockquote",[t("p",[e._v("Jez Humble RETEX about a case :")]),e._v(" "),e._m(38),e._v(" "),t("p",[e._v("The organisation is now something like that :")]),e._v(" "),e._m(39),e._v(" "),t("p",[e._v('The 3 lasts steps are called "the last mile".')]),e._v(" "),t("p",[e._v("The end user get any value just at the end.")]),e._v(" "),t("p",[e._v("Flickr was the first organization to deploy several times a day.")]),e._v(" "),t("p",[e._v("They got bought buy Yahoo. Yahoo engineers were stonished buy the deployment frequency.")]),e._v(" "),t("p",[e._v("They compare the service uptime with their core services and found Flickr uptime was far better then any of them.")]),e._v(" "),t("p",[e._v("Need to kill a myth : Deploy frequently is not killing stability. It is the opposite.")]),e._v(" "),t("p",[e._v("Why do we care about releasing frequently ?")]),e._v(" "),e._m(40),e._v(" "),t("p",[e._v("Continuous Delivery")]),e._v(" "),t("ul",[t("li",[e._v("software always production ready. Keeping the system working is more important then working on other features")]),e._v(" "),t("li",[e._v("releases tied to business needs, not operational constraints")]),e._v(" "),t("li",[e._v("production-ready software (fast, automated feedback on the production readiness of your applicatons every time there is a change - to code, infra or config)")]),e._v(" "),e._m(41),e._v(" "),t("li",[e._v("a single command should install everything i need to run the system on a virgin machine")]),e._v(" "),t("li",[e._v("continuous integration (merge commit to the trunk every day + build and test each revision)")]),e._v(" "),t("li",[e._v('W. Edwards Deming : "Cease dependence on mass inspection to achieve quality. Improve the process and build quality into the product in the first place."\n'),t("ul",[t("li",[e._v("testing is not something we do after development (we should do all the time)")]),e._v(" "),t("li",[e._v("QA is not responsable for quality. Their job is to represent the user.")]),e._v(" "),t("li",[e._v("See the "),t("a",{attrs:{href:"http://codegardener.com/the-marick-test-matrix",target:"_blank",rel:"noopener noreferrer"}},[e._v("Marick Test Matrix"),t("OutboundLink")],1)])])]),e._v(" "),e._m(42),e._v(" "),t("li",[e._v("release != deployment (release with feature toggle, so it is already deployed, but not released to end user)")]),e._v(" "),t("li",[e._v("don't implements continuous delivery in one batch, do it with continuous improvement")])])]),e._v(" "),e._m(43),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Continuous_delivery#Relationship_to_continuous_deployment",target:"_blank",rel:"noopener noreferrer"}},[e._v("wikipedia"),t("OutboundLink")],1)]),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),t("p",[t("a",{attrs:{href:"https://puppet.com/blog/continuous-delivery-vs-continuous-deployment-what-s-diff",target:"_blank",rel:"noopener noreferrer"}},[e._v("Continuous Delivery Vs. Continuous Deployment: What's the Diff? - puppet.com/blog - 20130830"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("They are the same except in continuous delivery the prod deploy is manual. Everything else is automated.")]),e._v(" "),t("p",[e._v("In continuous deployment everything is automated from commit to prod.")]),e._v(" "),e._m(46),e._v(" "),t("p",[t("a",{attrs:{href:"http://blog.ploeh.dk/2013/12/10/semantic-versioning-with-continuous-deployment/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Semantic Versioning with Continuous Deployment by Mark Seemann : blog.ploeh.dk"),t("OutboundLink")],1)]),e._v(" "),e._m(47),e._v(" "),t("p",[t("a",{attrs:{href:"http://blog.octo.com/feature-flipping/",target:"_blank",rel:"noopener noreferrer"}},[e._v("feature-flipping : blog.octo.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://featureflags.io/feature-flags/",target:"_blank",rel:"noopener noreferrer"}},[e._v("feature flags explained : featureflags.io"),t("OutboundLink")],1),e._v(" (very good link, with lots of use case, eg : early access)")]),e._v(" "),e._m(48),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=glZ1C-Yu5tw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Settings are evil - MPJ's Musings - FunFunFunction #62"),t("OutboundLink")],1)]),e._v(" "),e._m(49),e._v(" "),t("p",[e._v("Martin Fowler deal with this question in "),t("a",{attrs:{href:"https://martinfowler.com/bliki/FeatureToggle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("his feature toggle article"),t("OutboundLink")],1),e._v(" :")]),e._v(" "),e._m(50),e._v(" "),e._m(51),e._v(" "),t("p",[t("a",{attrs:{href:"https://fournines.wordpress.com/2011/11/20/feature-branches-vs-feature-toggles/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Feature branches vs. feature toggles : fournines.wordpress.com : 20111120"),t("OutboundLink")],1)]),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),e._m(54),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Waterfall_model",target:"_blank",rel:"noopener noreferrer"}},[e._v("waterfall - généralités"),t("OutboundLink")],1)])]),e._v(" "),e._m(55),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/V-Model_%28software_development%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("cycle en V - généralités"),t("OutboundLink")],1)])]),e._v(" "),e._m(56),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/M%C3%A9thode_agile",target:"_blank",rel:"noopener noreferrer"}},[e._v("méthodes agiles - généralités"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Scrum_%28m%C3%A9thode%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("SCRUM"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Kanban_%28d%C3%A9veloppement%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("kanban"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Extreme_programming",target:"_blank",rel:"noopener noreferrer"}},[e._v("Extreme programming"),t("OutboundLink")],1)])]),e._v(" "),e._m(57),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Frederick_Brooks",target:"_blank",rel:"noopener noreferrer"}},[e._v("Frederick Brooks"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/OS/360",target:"_blank",rel:"noopener noreferrer"}},[e._v("OS/360"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Le_Mythe_du_mois-homme",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mythe du mois / homme"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.cs.nott.ac.uk/~pszcah/G51ISS/Documents/NoSilverBullet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("No Silver Bullet — Essence and Accidents of Software Engineering"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Grady_Booch",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grady Booch"),t("OutboundLink")],1)]),e._v(" "),e._m(58)]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://gb-prod.fr/2016/06/12/artisan-developpeur.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gilles Roustan : Artisan développeur"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://williamdurand.fr/2013/07/30/from-stupid-to-solid-code/",target:"_blank",rel:"noopener noreferrer"}},[e._v("William Durand : From STUPID to SOLID code"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://www.c2.com/cgi/wiki?PrematureOptimization",target:"_blank",rel:"noopener noreferrer"}},[e._v("Donald Knuth : Premature Optimization"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Robert_Cecil_Martin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Robert Cecil Martin (Uncle Bob)"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("SOLID concept, Agile Manifesto Software Craftmanship")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://alm.developpez.com/livres/index/?page=Les-livres-en-francais#L2744023272",target:"_blank",rel:"noopener noreferrer"}},[e._v("Clean Code"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://codurance.com/blog/author/sandro-mancuso/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sandro Mancuso : Software Craftmanship"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Martin_Fowler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Martin Fowler : Agile Manifesto, CI"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672/ref=asap_bc?ie=UTF8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Refactoring"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Allen_Holub",target:"_blank",rel:"noopener noreferrer"}},[e._v("Allen Holub"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=vSnCeJEka_s",target:"_blank",rel:"noopener noreferrer"}},[e._v("The death of Agile"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=QVBlnCTu9Ms",target:"_blank",rel:"noopener noreferrer"}},[e._v("#NoEstimates"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://leanpub.com/u/ericelliott",target:"_blank",rel:"noopener noreferrer"}},[e._v('Eric Elliott : "Programming JavaScript Applications" (O’Reilly)'),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/ericelliott",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub profile"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("massive article writer on "),t("a",{attrs:{href:"https://medium.com/@_ericelliott",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("David Heinemeier Hansson (Creator of Ruby on Rails)")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://m.signalvnoise.com/the-majestic-monolith-29166d022228",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Majestic Monolith : medium.com 20160229"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/G%C3%A9rard_Berry",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gérard Berry"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("le lambda calcul et la programmation fonctionnelle ;")]),e._v(" "),t("li",[e._v("la programmation parallèle et temps réel ;")]),e._v(" "),t("li",[e._v("la conception assistée par ordinateur de circuits intégrés synchrones ;")]),e._v(" "),t("li",[e._v("la vérification formelle de programmes et circuits ;")]),e._v(" "),t("li",[e._v("la modélisation du calcul en général.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.franceculture.fr/emissions/la-grande-table-2eme-partie/dominer-linformatique-avec-gerard-berry",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dominer l’informatique avec Gérard Berry - France Culture - 20171030"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.college-de-france.fr/site/gerard-berry/inaugural-lecture-2008-01-17-18h00.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pourquoi et comment le monde devient numérique - Collèges de France - 20080117"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.franceculture.fr/emissions/la-methode-scientifique/gerard-berry-le-meilleur-des-mondes-informatiques",target:"_blank",rel:"noopener noreferrer"}},[e._v("Le meilleur des mondes informatiques - 20180829"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("ordinateur est la plus souple des machines puisqu'on peut lui télécharger ce qu'elle peut faire")]),e._v(" "),t("li",[e._v("problème de sémantique avec l'informatique, on mélange tout (algo, numérique, IoT, ...). Nous sommes absents de l'industrie (1 seule société dans les 100 premières mondiales) alors que nous sommes très en pointe en recherche.")]),e._v(" "),t("li",[e._v("pourtant l'informatique est partout autour de nous")]),e._v(" "),t("li",[e._v("absence de formation pour les gens qui utilisent sans rien comprendre")]),e._v(" "),t("li",[e._v("cite "),t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Jean-Marie_Hullot",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jean-Marie Hullot"),t("OutboundLink")],1),e._v(" créateur de "),t("a",{attrs:{href:"http://www.graphmobile.com/dossier/2-iphone-histoire.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("l'IPhone pour Steve Jobs"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("histoire informatique, au début tout était dur. Bootstraping, on commence par faire des petites choses dures, qui permettent de faire plus facilement des choses plus dures, etc ...")]),e._v(" "),t("li",[e._v("langage "),t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Esterel_(langage)",target:"_blank",rel:"noopener noreferrer"}},[e._v("Esterel"),t("OutboundLink")],1),e._v(" servant dans l'aviation. Permet de gérer le temps et de fournir des preuves de programmes (par ex le programme de l'ascenseur n'autorise pas l'ascenseur à monter ou descendre avec la porte ouverte).")]),e._v(" "),e._m(59),e._v(" "),t("li",[e._v("question de Manuel Serrano (chercheur INRIA dev de "),t("a",{attrs:{href:"http://hop.inria.fr/home/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hop.js"),t("OutboundLink")],1),e._v(") : Années 90 mise en réseau des ordis nous entraine dans l'ère de la prog distribuée. Web a spécificité, grosse diff entre machines serveurs qui font beaucoup de traitements et clients qui sont plus nombreux mais en font moins. On a eu la prog multi-tiers début 2000, question de savoir comment on peut parler de la prog asynchrone et de la temporalité des programmes. Ont pris le langage Esterel et ils l'ont adapté au web pour donner "),t("a",{attrs:{href:"https://github.com/manuel-serrano/hiphop",target:"_blank",rel:"noopener noreferrer"}},[e._v("hip-hop"),t("OutboundLink")],1),e._v(". Quelles seront les grandes étapes à franchir pour améliorer la sureté et la sécurité notamment pour l'internet des objets où la communication est encore plus fréquente que sur le web ?")]),e._v(" "),t("li",[e._v("réponse de G. Berry : algo distribués très différents des algos séquentiels. Peuvent être horriblement simple à écrire et horriblement compliqués à comprendre. Un des plus connus et utilisé est TCP (Transfert Control Protocol). Algo très délicats, souvent mon gros. En synchrone tout le monde partage le temps. En asynchrone non. En IoT, on a des interfaces asynchrones, tout va se mélanger. Bcp de questions, énorme source d'erreurs. Ex en asynchrone chacun veut 2 objets, chacun en possède un, et aucun ne veut lacher le sien, ça s'appele un dead lock qui entrain un blocage du système. On a pas les théories mathématiques qui faut. Pour la prog classique on a "),t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Lambda-calcul",target:"_blank",rel:"noopener noreferrer"}},[e._v("le lambda calculus de Church"),t("OutboundLink")],1),e._v(". On a pas l'équivalent en distribué. En synchrone on peut faire de la vérification formelle. Pas en asynchrone. La dominence du web fait que les gens sont incroyablement tolérants à la mauvaise qualité.")])])])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.eyrolles.com/Accueil/Auteur/jacques-printz-15337",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jacques Printz"),t("OutboundLink")],1)])])]),e._v(" "),e._m(60),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Louis_Pouzin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Louis Pouzin"),t("OutboundLink")],1)])]),e._v(" "),e._m(61),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.lip6.fr/actualite/personnes-fiche.php?ident=P242",target:"_blank",rel:"noopener noreferrer"}},[e._v("François Anceau"),t("OutboundLink")],1)])]),e._v(" "),e._m(62),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Najah_Naffah",target:"_blank",rel:"noopener noreferrer"}},[e._v("Najah Naffah"),t("OutboundLink")],1)])]),e._v(" "),e._m(63),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"http://glazman.org/weblog/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Daniel Glazman"),t("OutboundLink")],1),e._v(" Former co-chairman of the W3C CSS Working Group")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.franceculture.fr/emissions/linvite-des-matins-2eme-partie/sommes-nous-a-la-merci-de-nos-systemes-informatiques",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sommes-nous à la merci de nos systèmes informatiques ? - France Culture -  20171205"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("Rich Hickey "),t("a",{attrs:{href:"https://clojure.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Clojure"),t("OutboundLink")],1),e._v(" author, "),t("a",{attrs:{href:"https://pbs.twimg.com/media/DL-3OUcUMAAaXID.jpg",target:"_blank",rel:"noopener noreferrer"}},[e._v("The problems of programming"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/tj",target:"_blank",rel:"noopener noreferrer"}},[e._v("TJ Holowaychuk"),t("OutboundLink")],1)]),e._v(" "),e._m(64)]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://tinyclouds.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ryan Dahl"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("founder of Node.js, denom, ...")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.mappingthejourney.com/single-post/2017/08/31/episode-8-interview-with-ryan-dahl-creator-of-nodejs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Interview with Ryan Dahl, Creator of Node.js - www.mappingthejourney.com - 20170831"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.info.ucl.ac.be/~pvr/cvvanroy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Peter Van Roy"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Programming Paradigms forDummies:  What EveryProgrammer Should Know"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.info.ucl.ac.be/~pvr/paradigmes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Une taxonomie des principaux paradigmes de programmation"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.info.ucl.ac.be/~pvr/paradigmsDIAGRAM.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Les principaux paradigmes de programmation"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://medium.com/@Lilobase",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arnaud Lemaire"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=bQfumbBN6YQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Entre industrialisation et artisanat, le métier de développeur. - Arnaud Lemaire - Agile Pays Basque 2018"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://speakerdeck.com/lilobase/entre-industrialisation-et-artisanat-le-metier-de-developpeur-agilepaysbasque-2018",target:"_blank",rel:"noopener noreferrer"}},[e._v("slides"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=VKe9EE4MUxk",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dette technique et entropie du logiciel - 20180208"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://lilobase.wordpress.com/2015/05/13/mettez-en-place-des-habitudes-plutot-que-des-processus-lamelioration-continue-pilotee-par-les-kpi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mettez en place des habitudes plutôt que des processus : l’amélioration continue pilotée par les KPI - 2015"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://medium.com/arpinum/pourquoi-les-jeux-concours-pour-d%C3%A9veloppeurs-mexasp%C3%A8rent-ils-e85fd87e7463",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pourquoi les jeux-concours pour développeurs m’exaspèrent-ils ? - 2017"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.lilobase.me/",target:"_blank",rel:"noopener noreferrer"}},[e._v("newletter Code, Architecture Logicielle & Agilité"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=pLISFJM22ro",target:"_blank",rel:"noopener noreferrer"}},[e._v("Let's reset Agile - 20190308"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://twitter.com/Rich_Harris",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rich Harris"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://rollupjs.org/guide/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rollup.js"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://ractive.js.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ractive"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bublejs/buble",target:"_blank",rel:"noopener noreferrer"}},[e._v("bublé"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://svelte.dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Svelte official"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://svelte.dev/blog/svelte-3-rethinking-reactivity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Svelte 3: Rethinking reactivity - svelte.dev/blog - Rich Harris - 20190422"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=UX4YijQ3zhc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Top 10 Programming Books Every Software Developer Should Read"),t("OutboundLink")],1)])])]),e._v(" "),e._m(65),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Software_crisis",target:"_blank",rel:"noopener noreferrer"}},[e._v("Software crisis"),t("OutboundLink")],1),e._v("\nFin des années 70, les ordinateurs sont montés en puissance, donc permettent le développement de programmes plus puissants et plus complexe. Dégradation massive de la qualité du à la complexité. C'est le début des recherches en génie logiciel pour définir les bonnes pratiques du développement logiciel (gestion qualité, méthodes, invention programmation procédurale puis objet).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dot-com_bubble",target:"_blank",rel:"noopener noreferrer"}},[e._v("bulle internet"),t("OutboundLink")],1),e._v(" Fin 90 début 2000 le crash boursier entraine de nombreux licenciements de développeurs suite aux réductions du couts et aux sociétés déposants le bilan. Les développeurs ont alors tendance à se transformer en oui:oui pour éviter de perdre leur emploi, entrainant une dégradation massive de la qualité des productions. Ce phénomène associé à l'arrivée de nombreux jeunes développeurs sur le marché du travail quelques années après sont les deux phénomènes responsables de l'immaturité de l'industrie du développement logiciel dénoncée par Robert C. Martin (cf Martin pour une explication plus détaillée dans "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=ecIWPzGEbFc",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Future of Programming"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://plus.google.com/+RipRowan/posts/eVeouesvaVX",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jeff Bezos API Mandate explained by Google employee"),t("OutboundLink")],1)])]),e._v(" "),e._m(66),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=8pTEmbeENF4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bret Victor The Future of Programming - 20130709"),t("OutboundLink")],1),e._v(" ("),t("a",{attrs:{href:"http://worrydream.com/dbx/",target:"_blank",rel:"noopener noreferrer"}},[e._v("slides"),t("OutboundLink")],1),e._v(")")])]),e._v(" "),t("blockquote",[t("p",[e._v("Bret Victor give a presentation as we were in late sixties and imagine the future (our present)")]),e._v(" "),t("ul",[t("li",[e._v("1953 : IBM 650, we were all programming in binary")]),e._v(" "),t("li",[e._v("1955 : "),t("a",{attrs:{href:"http://www.columbia.edu/cu/computinghistory/650.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stan Poley create SOAP"),t("OutboundLink")],1),e._v(" (Symbolic Optimal Assembly Program)\n"),e._m(67)]),e._v(" "),t("li",[e._v("1957 : "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Fortran",target:"_blank",rel:"noopener noreferrer"}},[e._v("John Backus release FORTRAN"),t("OutboundLink")],1),e._v(" "),e._m(68)])]),e._v(" "),t("p",[e._v("There is always massive resistance to change.")]),e._v(" "),e._m(69)]),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://manifesto.softwarecraftsmanship.org/#/fr-fr",target:"_blank",rel:"noopener noreferrer"}},[e._v("manifesto.softwarecraftsmanship.org"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://fr.wikipedia.org/wiki/Software_craftsmanship",target:"_blank",rel:"noopener noreferrer"}},[e._v("Software_craftsmanship : fr.wikipedia.org"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=AQlsOPMKgBE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Software Craftsmanship by Sandro Mancuso @ Devoxx France 20??"),t("OutboundLink")],1)])]),e._v(" "),e._m(72),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=p0O1VVqRSK0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Demanding Professionalism in Software Development : Robert C. Martin (Uncle Bob)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=0oGpWmS0aYQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Agility and Architecture : Robert C. Martin (Uncle Bob)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=KtHQGs3zFAM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jim Coplien and Bob Martin Debate TDD"),t("OutboundLink")],1)])]),e._v(" "),e._m(73),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://craft-conf.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SOFTWARE DELIVERY CRAFTSMANSHIP MATTERS"),t("OutboundLink")],1)])]),e._v(" "),e._m(74),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=P9G7jBBwLjc&index=80&list=PLTbQvx84FrAS5clN9i8_LFUQxcMY7qXAO",target:"_blank",rel:"noopener noreferrer"}},[e._v("odyssée du Continuous Delivery Diego Lemos David Caramelo (Nicolas Bourgeois)"),t("OutboundLink")],1)]),e._v(" "),e._m(75),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=vUTYKLEneuI",target:"_blank",rel:"noopener noreferrer"}},[e._v("SOAT Agile Day - Keynote de Romain Niccoli - Etre agile dans un contexte de forte croissance"),t("OutboundLink")],1)]),e._v(" "),e._m(76),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.dossier-andreas.net/software_architecture/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Architectural patterns - www.dossier-andreas.net"),t("OutboundLink")],1)]),e._v(" "),e._m(77),e._v(" "),e._m(78),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.lucidchart.com/techblog/2015/08/31/the-worst-mistake-of-computer-science/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The worst mistake of computer science - www.lucidchart.com/techblog - 20150831"),t("OutboundLink")],1)]),e._v(" "),e._m(79)])}),[function(){var e=this._self._c;return e("h1",{attrs:{id:"genie-logiciel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#genie-logiciel"}},[this._v("#")]),this._v(" Génie Logiciel")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"principes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#principes"}},[this._v("#")]),this._v(" principes")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Découper un problème en plusieurs problèmes plus simples")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi de Hofstadter")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Il faut toujours plus de temps que prévu, même en tenant compte de la Loi de Hofstadter.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Donald Knuth à propos de l'optimisation prématurée")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Premature optimization is the root of all evil")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Ajouter des personnes à un projet en retard accroît son retard")]),this._v(" "),e("p",[this._v("Adding manpower to a late software project makes it later")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Neuf femmes ne font pas un enfant en un mois")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("80 % des effets sont le produit de 20 % des causes")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Les organisations à l’origine des architectures doivent refléter le système en lui-même.")]),this._v(" "),e("p",[this._v("organizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations")]),this._v(" "),e("p",[this._v("“The structure of a problem reflects the structure of the organization that created it.” Bill Corcoran’s version of Conway’s Law")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Pour un projet innovant, il faut multiplier l’estimation initiale des coûts par 3,14.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi de Parkinson")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Plus on a de temps pour réaliser une tâche, plus cette tâche prend du temps.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi de Murphy")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Toute chose prend plus de temps qu'on ne l'avait prévu")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi d'Illich")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Au delà d'un certain seuil de travail, l'efficacité décroit")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi de Carson")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Faire un travail de façon continue prend moins de temps que de le faire en plusieurs fois")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Loi de Fraisse")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("1 heure n'est pas toujours égale à 1 heure")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Ne parlez qu'à vos amis immédiats")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("YAGNI (You aren't gonna need it)")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Always implement things when you actually need them, never when you just foresee that you need them. (Ron Jeffries)")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"inversion-of-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inversion-of-control"}},[this._v("#")]),this._v(" Inversion of Control")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"normes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#normes"}},[this._v("#")]),this._v(" normes")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"pratiques"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pratiques"}},[this._v("#")]),this._v(" pratiques")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"monorepo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo"}},[this._v("#")]),this._v(" monorepo")])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("1 repo = 1 projet")]),this._v(" "),e("li",[this._v("1 repo = 1 micro-service")]),this._v(" "),e("li",[this._v("monorepo (tout le SI est contenu dans un seul repo)")])])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[e._v("version unifiée du code")]),e._v(" "),t("li",[e._v("unique source de vérité")]),e._v(" "),t("li",[e._v("réutilisation intensive")]),e._v(" "),t("li",[e._v("gestion des dépendances simplifiées (tous les projets ont les mêmes versions)")]),e._v(" "),t("li",[e._v("collaboration inter-équipes améliorées (mais nécessite meilleure communication)")]),e._v(" "),t("li",[e._v("frontières des équipes et code ownership flexibles (résoud le problème levé par la loi de Conway)")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("difficulté à faire des montées de version des dépendances (puisque tout le monde est impacté)")]),this._v(" "),e("li",[this._v("investissement très lourd du tooling pour gérer les projets")]),this._v(" "),e("li",[this._v("sécurité du code (tout le monde a tout le code)")])])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[e._v("1 repo (exclus : Chrome, Android, ...)")]),e._v(" "),t("li",[e._v("25K ingés")]),e._v(" "),t("li",[e._v("1 milliard de fichiers")]),e._v(" "),t("li",[e._v("35 millions de commits")]),e._v(" "),t("li",[e._v("9 millions de fichiers sources")]),e._v(" "),t("li",[e._v("2 milliards de lignes de code")])])},function(){var e=this._self._c;return e("h3",{attrs:{id:"continuous-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-integration"}},[this._v("#")]),this._v(" continuous integration")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Continuous integration (CI) is the practice, in software engineering, of merging all developer working copies to a shared mainline several times a day.")])])},function(){var e=this._self._c;return e("h3",{attrs:{id:"continuous-delivery"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-delivery"}},[this._v("#")]),this._v(" continuous delivery")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Continuous delivery (CD) is a software engineering approach in which teams produce software in short cycles, ensuring that the software can be reliably released at any time. It aims at building, testing, and releasing software faster and more frequently. The approach helps reduce the cost, time, and risk of delivering changes by allowing for more incremental updates to applications in production. A straightforward and repeatable deployment process is important for continuous delivery.")])])},function(){var e=this,t=e._self._c;return t("blockquote",[t("p",[e._v("A developer needs to do some change to the software, and another, and another, and it comes to a new version.")]),e._v(" "),t("p",[e._v("The question is how good are the changes ?")]),e._v(" "),t("p",[e._v("Continuous Delivery says : We need to prove the changes are OK. We begin to throw more and more tests (units, integration, functionnals, etc ...)")]),e._v(" "),t("p",[e._v("Until will be confident it is good.")]),e._v(" "),t("p",[e._v("And it goes through environments closer and closer to production.")]),e._v(" "),t("p",[e._v("Until you are confident it will be good when goin to production.")]),e._v(" "),t("p",[e._v("Continuous Delivery is : You "),t("em",[e._v("can")]),e._v(" deploy a change to production (but you may choose not to because it is a business decision)")]),e._v(" "),t("p",[e._v("Continuous Deployment is : You "),t("em",[e._v("do")]),e._v(" deploy a change to production")]),e._v(" "),t("p",[t("strong",[e._v("Needed ingredients :")])]),e._v(" "),t("ul",[t("li",[e._v("Automating everything (build, deploy, tests, even provisioning your machines)")]),e._v(" "),t("li",[e._v("Configuration management (you have to be able to checkout any version and instantly put it into a dedicated environment) Everything must be in the configuration management")]),e._v(" "),t("li",[e._v("DevOps Culture (Dev and Ops must collaborate. No separate walls.)")]),e._v(" "),t("li",[e._v("Continuous Integration (Every developer integrates with everybody elses work frequently)\n"),t("ul",[t("li",[e._v("Everyboy commits everyday to mainline (trunk, master)")]),e._v(" "),t("li",[e._v("Tests give enough confidence to say it's OK")]),e._v(" "),t("li",[e._v("If it fails, you fix it immediatly")])])])]),e._v(" "),t("p",[t("strong",[e._v("Benefits :")])]),e._v(" "),t("ul",[t("li",[e._v("Lowering risks (the smaller the change, the smaller the risk)")]),e._v(" "),t("li",[e._v("Definition Of Done (live in prod) : Real progress")]),e._v(" "),t("li",[e._v("Learning from frequent delivery from users feedback")])]),e._v(" "),t("p",[e._v("Not easy to make it, can takes months to put in place.")]),e._v(" "),t("p",[e._v("Probably one of the most critical practice.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("top management decide to go agile")]),this._v(" "),e("li",[this._v("they hire scrum master")]),this._v(" "),e("li",[this._v("they send team into 2 days formation")]),this._v(" "),e("li",[this._v("and now they should be agile")])])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("em",[e._v("Customer")]),e._v(" push user stories to the "),t("em",[e._v('"agile dev team"')]),e._v(".")]),e._v(" "),t("li",[t("em",[e._v("Dev team")]),e._v(" analyse, design, dev them test and makes showcases. They iterates several sprints inside that box")]),e._v(" "),t("li",[e._v("The result is pushed to a "),t("em",[e._v("centralized QA team")])]),e._v(" "),t("li",[e._v("They iterates with "),t("em",[e._v("dev team")]),e._v(" to fix things")]),e._v(" "),t("li",[e._v("Then the result is pushed to "),t("em",[e._v("IT Operations team")]),e._v(" who deploy.")])])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[e._v("building the right thing (far more then 50% of functionnality in software are rarely used)\n"),t("ul",[t("li",[e._v("Scientific method : create hypothesis, deliver MVP, get feedback, repeat. This is "),t("strong",[e._v("lead time")]),e._v(".")]),e._v(" "),t("li",[e._v("the main work is to optimize a software delivery process around this loop.")])])]),e._v(" "),t("li",[e._v("reduce risk of release\n"),t("ul",[t("li",[e._v("release frequently means delivering smaller batch size")]),e._v(" "),t("li",[e._v("when Flickr release a change it is about 50 to 100 LoC. Easy to debug a problem.")]),e._v(" "),t("li",[e._v("MTBF versus MTRS (Mean Time Before Failure vs Mean Time to Restore Service)")])])]),e._v(" "),t("li",[e._v("real project progress (done means it works on my machine, done done means it works in production)\n"),t("ul",[t("li",[e._v("if you want to reduce cycle times (and reduce lead time) you can\n"),t("ul",[t("li",[e._v("increase capacity (more peoples) but see mythical man month (it's trying to speed up pregnancy by adding 8 women)")]),e._v(" "),t("li",[e._v("reduce demand (reduce the scope)")]),e._v(" "),t("li",[e._v("the easiest way is to reduce batch size (this is why Kanban is important)")])])])])])])},function(){var e=this._self._c;return e("li",[this._v("3 pillars :\n"),e("ul",[e("li",[this._v("automation")]),this._v(" "),e("li",[this._v("patterns and practices")]),this._v(" "),e("li",[this._v("collaboration (ux, tests, business, ...)")])])])},function(){var e=this,t=e._self._c;return t("li",[e._v("deployment pipeline (an automated impl of your system's build, deploy, test, release process)\n"),t("ul",[t("li",[e._v("visibility")]),e._v(" "),t("li",[e._v("feedback")]),e._v(" "),t("li",[e._v("control")]),e._v(" "),t("li",[e._v("every build is a release candidate")]),e._v(" "),t("li",[e._v("if you fear to deploy in production by just pushing a button, it means you need to fix your validation process")])])])},function(){var e=this._self._c;return e("h3",{attrs:{id:"continuous-deployment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-deployment"}},[this._v("#")]),this._v(" continuous deployment")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Continuous deployment means that every change is automatically deployed to production.")])])},function(){var e=this._self._c;return e("h3",{attrs:{id:"continuous-delivery-vs-continuous-deployment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-delivery-vs-continuous-deployment"}},[this._v("#")]),this._v(" continuous delivery vs continuous deployment")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"continuous-delivery-deployment-and-semver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-delivery-deployment-and-semver"}},[this._v("#")]),this._v(" continuous delivery / deployment and semver")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"feature-flipping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature-flipping"}},[this._v("#")]),this._v(" feature flipping")])},function(){var e=this._self._c;return e("h4",{attrs:{id:"drawback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drawback"}},[this._v("#")]),this._v(" drawback")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("TLDR : Feature toggle generate combinatorial explosion of test cases -> lower quality")])])},function(){var e=this,t=e._self._c;return t("blockquote",[t("p",[e._v("A common question we hear about feature toggles concerns testing - "),t("strong",[e._v("does using feature toggles mean a combinatorial\nexplosion of tests")]),e._v("? In general there's "),t("strong",[e._v("no need to test all combinations of features")]),e._v(".\nFor release toggles it's usually sufficient to run two combinations :")]),e._v(" "),t("ul",[t("li",[e._v("all the toggles on that are expected to be on in the next release")]),e._v(" "),t("li",[e._v("all toggles on")])]),e._v(" "),t("p",[e._v("This is pretty much the same as what you need to do with feature branches if you want to find any integration bugs.")]),e._v(" "),t("p",[t("strong",[e._v("It's very important to retire release toggles once the pending features have bedded down in production")]),e._v(".\nThis involves removing the definitions on the configuration file and all the code that uses them.\n"),t("strong",[e._v("Otherwise you will get a pile of toggles that nobody can remember how to use")]),e._v(". In one memorable example I heard of,\nit required making a special recompilation of the linux kernel to handle enough command line switches.")])])},function(){var e=this._self._c;return e("h4",{attrs:{id:"feature-branches-vs-feature-toggles"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature-branches-vs-feature-toggles"}},[this._v("#")]),this._v(" feature branches vs feature toggles")])},function(){var e=this,t=e._self._c;return t("blockquote",[t("p",[e._v('The biggest mistake you can make when deciding on how to use branches is trying to define "one branching strategy to rule them all".')]),e._v(" "),t("p",[e._v("Feature toggle should not be systematicly used. It should be only if the team experience pain merges.")]),e._v(" "),t("p",[e._v("Features branches cons :")]),e._v(" "),t("ul",[t("li",[e._v("the feature branch is not merged in the mainline, so there is no CI on it")]),e._v(" "),t("li",[e._v("concurrent feature branch works can lead to big conflicts when merging. The last team to merge will have to handle all the issues.")])]),e._v(" "),t("p",[e._v("Conflicts could symptomatic of underlying problems :")]),e._v(" "),t("ul",[t("li",[e._v("poor design")]),e._v(" "),t("li",[e._v("no cohesive view of the domain (no or bad modelization)")]),e._v(" "),t("li",[e._v("or multiple logical views of the domain")]),e._v(" "),t("li",[e._v("refactor-rage (a dev doing lot's of cow boy refactoring)")])]),e._v(" "),t("p",[e._v("Feature toggle can be impl at build time or at runtime. Build time means you need several CI pipeline, run time increase\nincrease code complexity.")]),e._v(" "),t("p",[e._v("Feature toggles are certainly an interesting concept, and seem to mesh well with the principle of building composable\napplications. However, they are not without their pitfalls, so if you are thinking about trying them out, make sure\nthat they are the most appropriate solution to the actual problem that you’re trying to solve.")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"methodes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methodes"}},[this._v("#")]),this._v(" méthodes")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"waterfall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waterfall"}},[this._v("#")]),this._v(" waterfall")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"cycle-en-v"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cycle-en-v"}},[this._v("#")]),this._v(" cycle en V")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"agiles"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agiles"}},[this._v("#")]),this._v(" agiles")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"auteurs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auteurs"}},[this._v("#")]),this._v(" auteurs")])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("Booch Method")]),this._v(" "),e("li",[this._v("UML")]),this._v(" "),e("li",[this._v("Continuous Integration")])])},function(){var e=this._self._c;return e("li",[this._v("3 formes de communications possible : "),e("em",[this._v("asynchrone")]),this._v(" (internet par ex, on envoie un message on ne sait pas si il va arriver ni quand), "),e("em",[this._v("synchrone")]),this._v(" (on envoie un message et on fait comme si il arrivait en temps zéro), "),e("em",[this._v("vibratoire")]),this._v(" (envoie message qui arrive à une vitesse connue, par le GPS), c'est en étudiant comment programmer sur ces 3 paradigmes et en les faisant communiquer qu'ils ont développé Esterel.")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("a été titulaire de la chaire de génie logiciel du Cnam. A dirigé les développements logiciels des ordinateurs Bull DPS7. Consultant en systèmes d’information auprès de grandes entreprises et administrations. Auteur de nombreux ouvrages sur le génie logiciel.")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("inventeur du datagramme et concepteur du premier réseau à commutation de paquets, à la base de ce qui deviendra Internet. Lauréat du Queen Elizabeth Prize for Engineering en 2013. Militant du multilinguisme dans l’espace numérique et d’une nouvelle gouvernance d’Internet")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("a été titulaire de la chaire des techniques fondamentales de l'informatique du Cnam, responsable de recherche à l'Imag, Bull et l'Ecole Polytechnique. Pionnier en France des architectures de circuits intégrés, en particulier sur leur preuve formelle et leur synchronisation interne.")])])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Précurseur à l’INRIA de la notion de routeur de réseau, puis du poste de travail intelligent, en dirigeant le projet Kayak. Il a ensuite exercé des responsabilités de direction dans l’Industrie (Bull, EDS, Sabre, Prologue), et maintenant de conseil en management.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("founder of Express, Koa, Commander, ...")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"histoire"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#histoire"}},[this._v("#")]),this._v(" histoire")])},function(){var e=this,t=e._self._c;return t("blockquote",[t("ol",[t("li",[e._v("All teams will henceforth expose their data and functionality through service interfaces.")]),e._v(" "),t("li",[e._v("Teams must communicate with each other through these interfaces.")]),e._v(" "),t("li",[e._v("There will be no other form of interprocess communication allowed:  no direct linking, no direct reads of another team's data store, no shared-memory model, no back-doors whatsoever.  The only communication allowed is via service interface calls over the network.")]),e._v(" "),t("li",[e._v("It doesn't matter what technology they use.  HTTP, Corba, Pubsub, custom protocols -- doesn't matter.  Bezos doesn't care.")]),e._v(" "),t("li",[e._v("All service interfaces, without exception, must be designed from the ground up to be externalizable.  That is to say, the team must plan and design to be able to expose the interface to developers in the outside world.  No exceptions.")]),e._v(" "),t("li",[e._v("Anyone who doesn't do this will be fired.")])])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("when assembly was released, current programmers did not want it.")])])},function(){var e=this._self._c;return e("ul",[e("li",[this._v("same resistances")])])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("p",[e._v("The 4 ideas the author wants to talk about (about recent researchs) :")]),e._v(" "),t("ul",[t("li",[e._v("coding (telling the computer what to do) "),t("code",[e._v("->")]),e._v(" direct manipulation of data (manipulation of data structure implicitly build the program)")]),e._v(" "),t("li",[e._v("procedures (list of things to do) "),t("code",[e._v("->")]),e._v(" goals and constraints (telling the computer what you want, not what to do)")]),e._v(" "),t("li",[e._v("text dump (we use text file as source code) "),t("code",[e._v("->")]),e._v(" spatial representations (hooking videos displays to computers)")]),e._v(" "),t("li",[e._v("sequential (the control flow) "),t("code",[e._v("->")]),e._v(" concurrent (soon there will be material really adapted to concurrency)")])])]),e._v(" "),t("li",[t("p",[e._v("coding "),t("code",[e._v("->")]),e._v(" direct manipulation of data")]),e._v(" "),t("ul",[t("li",[e._v("sketchpad in 1962. Creating a rectangle not by programming it in source code but by manipulating the data and applying constraints to them.")])])]),e._v(" "),t("li",[t("p",[e._v("procedures "),t("code",[e._v("->")]),e._v(" goals and constraints")]),e._v(" "),t("ul",[t("li",[e._v("planner in 1969, prolog in 1972")]),e._v(" "),t("li",[e._v("pattern matching : snobol in 1962, regular expressions in 1967")]),e._v(" "),t("li",[e._v("joke about internet : programs in a shared network should figure out by themselves how to talk to each others (the goal). They should not rely on API (imperatively programmed by humans and subject to breaking changes).")])])]),e._v(" "),t("li",[t("p",[e._v("text dump "),t("code",[e._v("->")]),e._v(" spatial representations")]),e._v(" "),t("ul",[t("li",[e._v("NLS in 1968 (presenting data in different views, a list then a graph)")]),e._v(" "),t("li",[e._v("Grail in 1968 (programming with flow charts)")]),e._v(" "),t("li",[e._v("smalltalk in 1972 (text source code but organized spatially)")])])]),e._v(" "),t("li",[t("p",[e._v("sequential "),t("code",[e._v("->")]),e._v(" concurrent")]),e._v(" "),t("ul",[t("li",[e._v("today program are sequence of instruction. The future should be parallel programming.")]),e._v(" "),t("li",[e._v("the reason we write sequential programs is because of the hardware")]),e._v(" "),t("li",[e._v("hardware is built upon the Von Neumann architecture : The CPU is fetching words from the memory.")]),e._v(" "),t("li",[e._v("the sequential programming model makes sense when you have only one CPU, a CPU can process only one thing at a time.")]),e._v(" "),t("li",[e._v("one characteristic of Von Neumann architecture is that most of the memory is idle most of the time.")]),e._v(" "),t("li",[e._v("it makes sense with old hardware architecture (tubes, mecanisms, etc ...)")]),e._v(" "),t("li",[e._v("1971, 4004 microprocessor from Intel. CPU and memory are only be made by transistors on silicon.")]),e._v(" "),t("li",[e._v("if you want to maximize the usage, you should start looking to massively parallel processors array")]),e._v(" "),t("li",[e._v("it scales")]),e._v(" "),t("li",[e._v("this is the architecture of the future instead Intel stranghold the market by pushing his architecture 😉")]),e._v(" "),t("li",[e._v("how do we program on that architecture ?")]),e._v(" "),t("li",[e._v("today we program with threads and locks and this is really hard when working with the same shared memory")]),e._v(" "),t("li",[e._v("1973 : The actor model, inspired by physics")])])]),e._v(" "),t("li",[t("p",[e._v("it would be a shame if in 40 years we will still programming in procedures with text files in sequential model")])]),e._v(" "),t("li",[t("p",[e._v("the worst would be if that ideas from 60/70 have been forgotten")])]),e._v(" "),t("li",[t("p",[e._v("the worst would be if the next programmers generations grows up without being exposed to theses ideas")])]),e._v(" "),t("li",[t("p",[e._v("they will think that programming model is solved and they grow up with dogma")])]),e._v(" "),t("li",[t("p",[e._v("The most dangerous thought you can have as a creative person is to think you know what you're doing.")])])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"courants"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#courants"}},[this._v("#")]),this._v(" courants")])},function(){var e=this._self._c;return e("h3",{attrs:{id:"software-craftmanship"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#software-craftmanship"}},[this._v("#")]),this._v(" Software Craftmanship")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Agile : Are we building the right thing ?")]),this._v(" "),e("p",[this._v("Craftsmanship : Are we building the thing right ?")]),this._v(" "),e("p",[this._v("from Software Craftsmanship by Sandro Mancuso @ Devoxx France 20??")])])},function(){var e=this._self._c;return e("h4",{attrs:{id:"conferences"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conferences"}},[this._v("#")]),this._v(" Conférences")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"exemples-concrets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exemples-concrets"}},[this._v("#")]),this._v(" exemples concrets")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("Présentation Devoxx2016 sur le passage du code legacy au continuous delivery à la Société Générale. Juste génial.")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[this._v("#")]),this._v(" architecture")])},function(){var e=this,t=e._self._c;return t("blockquote",[t("ul",[t("li",[e._v("Model-View-Controller")]),e._v(" "),t("li",[e._v("Presentation-Abstraction-Control")]),e._v(" "),t("li",[e._v("Pipe-And-Filter")]),e._v(" "),t("li",[e._v("Layered Systems")]),e._v(" "),t("li",[e._v("Microkernel")]),e._v(" "),t("li",[e._v("Client-Server and N-Tier Systems")]),e._v(" "),t("li",[e._v("Repository")]),e._v(" "),t("li",[e._v("Blackboard")]),e._v(" "),t("li",[e._v("Finite State Machine")]),e._v(" "),t("li",[e._v("Process Control")]),e._v(" "),t("li",[e._v("Multi Agent System")]),e._v(" "),t("li",[e._v("Broker a.k.a. Service Oriented Architecture")]),e._v(" "),t("li",[e._v("Master-Slave")]),e._v(" "),t("li",[e._v("Interpreter a.k.a. Virtual Machine")]),e._v(" "),t("li",[e._v("Hub-And-Spoke")]),e._v(" "),t("li",[e._v("Message Bus a.k.a. Event Bus")]),e._v(" "),t("li",[e._v("Structural Model")]),e._v(" "),t("li",[e._v("Ports-And-Adapters a.k.a. Hexagonal Architecture")]),e._v(" "),t("li",[e._v("Peer-to-peer")]),e._v(" "),t("li",[e._v("Event sourcing")]),e._v(" "),t("li",[e._v("CQRS")])])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"divers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#divers"}},[this._v("#")]),this._v(" divers")])},function(){var e=this._self._c;return e("blockquote",[e("p",[this._v("In commemoration of the 50th anniversary of Sir Hoare’s null, this article explains what null is, why it is so terrible, and how to avoid it.")])])}],!1,null,null,null);t.default=i.exports}}]);