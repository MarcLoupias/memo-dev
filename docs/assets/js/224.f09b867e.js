(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{392:function(e,t,i){"use strict";i.r(t);var r=i(0),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.catswhocode.com/blog/100-vim-commands-every-programmer-should-know",target:"_blank",rel:"noopener noreferrer"}},[e._v("vim commands list"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"http://www.fprintf.net/vimCheatSheet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("vim cheat sheet"),t("OutboundLink")],1)]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12)])}),[function(){var e=this._self._c;return e("h1",{attrs:{id:"vim-memo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vim-memo"}},[this._v("#")]),this._v(" VIM memo")])},function(){var e=this._self._c;return e("h2",{attrs:{id:"copy-and-paste"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-and-paste"}},[this._v("#")]),this._v(" copy and paste")])},function(){var e=this._self._c;return e("ul",[e("li",[e("code",[this._v("dd")]),this._v(" cut the line where the cursor is")]),this._v(" "),e("li",[e("code",[this._v("p")]),this._v(" paste the text after the line where the cursor is")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"how-to-exit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-exit"}},[this._v("#")]),this._v(" How to Exit")])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("code",[e._v(":q[uit]")]),e._v(" Quit Vim. This fails when changes have been made.")]),e._v(" "),t("li",[t("code",[e._v(":q[uit]!")]),e._v(" Quit without writing.")]),e._v(" "),t("li",[t("code",[e._v(":cq[uit]")]),e._v(" Quit always, without writing.")]),e._v(" "),t("li",[t("code",[e._v(":wq")]),e._v(" Write the current file and exit.")]),e._v(" "),t("li",[t("code",[e._v(":wq!")]),e._v(" Write the current file and exit always.")]),e._v(" "),t("li",[t("code",[e._v(":wq {file}")]),e._v(" Write to {file}. Exit if not editing the last")]),e._v(" "),t("li",[t("code",[e._v(":wq! {file}")]),e._v(" Write to {file} and exit always.")]),e._v(" "),t("li",[t("code",[e._v(":[range]wq[!] [file]")]),e._v(" Same as above, but only write the lines in [range].")]),e._v(" "),t("li",[t("code",[e._v("ZZ")]),e._v(" Write current file, if modified, and exit.")]),e._v(" "),t("li",[t("code",[e._v("ZQ")]),e._v(' Quit current file and exit (same as ":q!").')])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"editing-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#editing-a-file"}},[this._v("#")]),this._v(" Editing a File")])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("code",[e._v(":e[dit]")]),e._v(" Edit the current file. This is useful to re-edit the current file, when it has been changed outside of Vim.")]),e._v(" "),t("li",[t("code",[e._v(":e[dit]!")]),e._v(" Edit the current file always. Discard any changes to the current buffer. This is useful if you want to start all over again.")]),e._v(" "),t("li",[t("code",[e._v(":e[dit] {file}")]),e._v(" Edit {file}.")]),e._v(" "),t("li",[t("code",[e._v(":e[dit]! {file}")]),e._v(" Edit {file} always. Discard any changes to the current buffer.")]),e._v(" "),t("li",[t("code",[e._v("gf")]),e._v(' Edit the file whose name is under or after the cursor. Mnemonic: "goto file".')])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"inserting-text"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inserting-text"}},[this._v("#")]),this._v(" Inserting Text")])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("code",[e._v("a")]),e._v(" Append text after the cursor [count] times.")]),e._v(" "),t("li",[t("code",[e._v("A")]),e._v(" Append text at the end of the line [count] times.")]),e._v(" "),t("li",[t("code",[e._v("i")]),e._v(" Insert text before the cursor [count] times.")]),e._v(" "),t("li",[t("code",[e._v("I")]),e._v(" Insert text before the first non-blank in the line [count] times.")]),e._v(" "),t("li",[t("code",[e._v("gI")]),e._v(" Insert text in column 1 [count] times.")]),e._v(" "),t("li",[t("code",[e._v("o")]),e._v(" Begin a new line below the cursor and insert text, repeat [count] times.")]),e._v(" "),t("li",[t("code",[e._v("O")]),e._v(" Begin a new line above the cursor and insert text, repeat [count] times.")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"inserting-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inserting-a-file"}},[this._v("#")]),this._v(" Inserting a file")])},function(){var e=this._self._c;return e("ul",[e("li",[e("code",[this._v(":r[ead] [name]")]),this._v(" Insert the file [name] below the cursor.")]),this._v(" "),e("li",[e("code",[this._v(":r[ead] !{cmd}")]),this._v(" Execute {cmd} and insert its standard output below the cursor.")])])},function(){var e=this._self._c;return e("h2",{attrs:{id:"deleting-text"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deleting-text"}},[this._v("#")]),this._v(" Deleting Text")])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[t("code",[e._v("<Del>")]),e._v(" or "),t("code",[e._v("x")]),e._v(" Delete [count] characters under and after the cursor")]),e._v(" "),t("li",[t("code",[e._v("X")]),e._v(" Delete [count] characters before the cursor")]),e._v(" "),t("li",[t("code",[e._v("d{motion}")]),e._v(" Delete text that {motion} moves over")]),e._v(" "),t("li",[t("code",[e._v("dd")]),e._v(" Delete [count] lines")]),e._v(" "),t("li",[t("code",[e._v("D")]),e._v(" Delete the characters under the cursor until the end of the line")]),e._v(" "),t("li",[t("code",[e._v("{Visual}x")]),e._v(" or "),t("code",[e._v("{Visual}d")]),e._v(" Delete the highlighted text (for {Visual} see Selecting Text).")]),e._v(" "),t("li",[t("code",[e._v("{Visual}CTRL-H")]),e._v(" or "),t("code",[e._v("{Visual}")]),e._v(" When in Select mode: Delete the highlighted text")]),e._v(" "),t("li",[t("code",[e._v("{Visual}X")]),e._v(" or "),t("code",[e._v("{Visual}D")]),e._v(" Delete the highlighted lines")]),e._v(" "),t("li",[t("code",[e._v(":[range]d[elete]")]),e._v(" Delete [range] lines (default: current line)")]),e._v(" "),t("li",[t("code",[e._v(":[range]d[elete] {count}")]),e._v(" Delete {count} lines, starting with [range]")])])}],!1,null,null,null);t.default=n.exports}}]);